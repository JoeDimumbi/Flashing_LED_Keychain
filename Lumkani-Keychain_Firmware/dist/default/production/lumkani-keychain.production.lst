

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Sep 27 10:22:08 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16LF18326
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	cinit,global,class=CODE,merge=1,delta=2
    30                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    31                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    32                           	psect	inittext,global,class=CODE,delta=2
    33                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    35                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    36                           	psect	text1,local,class=CODE,merge=1,delta=2
    37                           	psect	text2,local,class=CODE,merge=1,delta=2
    38                           	psect	text3,local,class=CODE,merge=1,delta=2
    39                           	psect	text4,local,class=CODE,merge=1,delta=2
    40                           	psect	text5,local,class=CODE,merge=1,delta=2
    41                           	psect	text6,local,class=CODE,merge=1,delta=2
    42                           	psect	text7,local,class=CODE,merge=1,delta=2
    43                           	psect	text8,local,class=CODE,merge=1,delta=2
    44                           	psect	text9,local,class=CODE,merge=1,delta=2
    45                           	psect	text10,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.00
    49                           ; Generated 27/05/2018 GMT
    50                           ; 
    51                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16LF18326 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000E                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  008C                     	;# 
   116  008E                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0097                     	;# 
   123  009B                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010E                     	;# 
   131  0111                     	;# 
   132  0112                     	;# 
   133  0113                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0117                     	;# 
   138  0118                     	;# 
   139  0119                     	;# 
   140  018C                     	;# 
   141  018E                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019C                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019D                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019E                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  019F                     	;# 
   167  020C                     	;# 
   168  020E                     	;# 
   169  0211                     	;# 
   170  0211                     	;# 
   171  0212                     	;# 
   172  0212                     	;# 
   173  0213                     	;# 
   174  0213                     	;# 
   175  0214                     	;# 
   176  0214                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0216                     	;# 
   182  0216                     	;# 
   183  0217                     	;# 
   184  0217                     	;# 
   185  0219                     	;# 
   186  021A                     	;# 
   187  021B                     	;# 
   188  021C                     	;# 
   189  021D                     	;# 
   190  021D                     	;# 
   191  021E                     	;# 
   192  021F                     	;# 
   193  028C                     	;# 
   194  028E                     	;# 
   195  0291                     	;# 
   196  0291                     	;# 
   197  0292                     	;# 
   198  0293                     	;# 
   199  0294                     	;# 
   200  0295                     	;# 
   201  0295                     	;# 
   202  0296                     	;# 
   203  0297                     	;# 
   204  0298                     	;# 
   205  029F                     	;# 
   206  030C                     	;# 
   207  030E                     	;# 
   208  0311                     	;# 
   209  0311                     	;# 
   210  0312                     	;# 
   211  0313                     	;# 
   212  0314                     	;# 
   213  0315                     	;# 
   214  0315                     	;# 
   215  0316                     	;# 
   216  0317                     	;# 
   217  0318                     	;# 
   218  038C                     	;# 
   219  038E                     	;# 
   220  0391                     	;# 
   221  0392                     	;# 
   222  0393                     	;# 
   223  0397                     	;# 
   224  0398                     	;# 
   225  0399                     	;# 
   226  039A                     	;# 
   227  039C                     	;# 
   228  039D                     	;# 
   229  039E                     	;# 
   230  039F                     	;# 
   231  0411                     	;# 
   232  0411                     	;# 
   233  0412                     	;# 
   234  0413                     	;# 
   235  0414                     	;# 
   236  0415                     	;# 
   237  0416                     	;# 
   238  0417                     	;# 
   239  0418                     	;# 
   240  0418                     	;# 
   241  0419                     	;# 
   242  041A                     	;# 
   243  041B                     	;# 
   244  041C                     	;# 
   245  041D                     	;# 
   246  041E                     	;# 
   247  041F                     	;# 
   248  0498                     	;# 
   249  0498                     	;# 
   250  0499                     	;# 
   251  049A                     	;# 
   252  049B                     	;# 
   253  049B                     	;# 
   254  049C                     	;# 
   255  049D                     	;# 
   256  049E                     	;# 
   257  049F                     	;# 
   258  0617                     	;# 
   259  0618                     	;# 
   260  0619                     	;# 
   261  0619                     	;# 
   262  061A                     	;# 
   263  061B                     	;# 
   264  061C                     	;# 
   265  061C                     	;# 
   266  061F                     	;# 
   267  0691                     	;# 
   268  0692                     	;# 
   269  0693                     	;# 
   270  0694                     	;# 
   271  0695                     	;# 
   272  0696                     	;# 
   273  0697                     	;# 
   274  0698                     	;# 
   275  0699                     	;# 
   276  0711                     	;# 
   277  0712                     	;# 
   278  0713                     	;# 
   279  0714                     	;# 
   280  0715                     	;# 
   281  0716                     	;# 
   282  0717                     	;# 
   283  0718                     	;# 
   284  0719                     	;# 
   285  0891                     	;# 
   286  0891                     	;# 
   287  0891                     	;# 
   288  0891                     	;# 
   289  0891                     	;# 
   290  0891                     	;# 
   291  0892                     	;# 
   292  0892                     	;# 
   293  0892                     	;# 
   294  0893                     	;# 
   295  0893                     	;# 
   296  0893                     	;# 
   297  0893                     	;# 
   298  0893                     	;# 
   299  0893                     	;# 
   300  0894                     	;# 
   301  0894                     	;# 
   302  0894                     	;# 
   303  0895                     	;# 
   304  0895                     	;# 
   305  0895                     	;# 
   306  0896                     	;# 
   307  0896                     	;# 
   308  0896                     	;# 
   309  089B                     	;# 
   310  0911                     	;# 
   311  0912                     	;# 
   312  0913                     	;# 
   313  0914                     	;# 
   314  0915                     	;# 
   315  0916                     	;# 
   316  0918                     	;# 
   317  0919                     	;# 
   318  091A                     	;# 
   319  091B                     	;# 
   320  091C                     	;# 
   321  091D                     	;# 
   322  091E                     	;# 
   323  091F                     	;# 
   324  0E0F                     	;# 
   325  0E10                     	;# 
   326  0E11                     	;# 
   327  0E12                     	;# 
   328  0E13                     	;# 
   329  0E14                     	;# 
   330  0E15                     	;# 
   331  0E16                     	;# 
   332  0E17                     	;# 
   333  0E18                     	;# 
   334  0E19                     	;# 
   335  0E1A                     	;# 
   336  0E1B                     	;# 
   337  0E1C                     	;# 
   338  0E1D                     	;# 
   339  0E1E                     	;# 
   340  0E1F                     	;# 
   341  0E20                     	;# 
   342  0E21                     	;# 
   343  0E22                     	;# 
   344  0E24                     	;# 
   345  0E25                     	;# 
   346  0E28                     	;# 
   347  0E29                     	;# 
   348  0E2A                     	;# 
   349  0E2B                     	;# 
   350  0E2C                     	;# 
   351  0E2D                     	;# 
   352  0E2E                     	;# 
   353  0E2F                     	;# 
   354  0E90                     	;# 
   355  0E91                     	;# 
   356  0E92                     	;# 
   357  0E94                     	;# 
   358  0E95                     	;# 
   359  0EA0                     	;# 
   360  0EA1                     	;# 
   361  0EA2                     	;# 
   362  0EA3                     	;# 
   363  0EA4                     	;# 
   364  0EA5                     	;# 
   365  0F0F                     	;# 
   366  0F10                     	;# 
   367  0F11                     	;# 
   368  0F12                     	;# 
   369  0F13                     	;# 
   370  0F14                     	;# 
   371  0F15                     	;# 
   372  0F16                     	;# 
   373  0F17                     	;# 
   374  0F18                     	;# 
   375  0F19                     	;# 
   376  0F1A                     	;# 
   377  0F1B                     	;# 
   378  0F1C                     	;# 
   379  0F1D                     	;# 
   380  0F1E                     	;# 
   381  0F1F                     	;# 
   382  0F20                     	;# 
   383  0F21                     	;# 
   384  0F22                     	;# 
   385  0F23                     	;# 
   386  0F24                     	;# 
   387  0F25                     	;# 
   388  0F26                     	;# 
   389  0F27                     	;# 
   390  0F28                     	;# 
   391  0F29                     	;# 
   392  0F2A                     	;# 
   393  0F2B                     	;# 
   394  0F2C                     	;# 
   395  0F2D                     	;# 
   396  0F2E                     	;# 
   397  0F2F                     	;# 
   398  0F30                     	;# 
   399  0F31                     	;# 
   400  0F32                     	;# 
   401  0F33                     	;# 
   402  0F34                     	;# 
   403  0F35                     	;# 
   404  0F36                     	;# 
   405  0F37                     	;# 
   406  0FE4                     	;# 
   407  0FE5                     	;# 
   408  0FE6                     	;# 
   409  0FE7                     	;# 
   410  0FE8                     	;# 
   411  0FE9                     	;# 
   412  0FEA                     	;# 
   413  0FEB                     	;# 
   414  0FED                     	;# 
   415  0FEE                     	;# 
   416  0FEF                     	;# 
   417  0000                     	;# 
   418  0001                     	;# 
   419  0002                     	;# 
   420  0003                     	;# 
   421  0004                     	;# 
   422  0005                     	;# 
   423  0006                     	;# 
   424  0007                     	;# 
   425  0008                     	;# 
   426  0009                     	;# 
   427  000A                     	;# 
   428  000B                     	;# 
   429  000C                     	;# 
   430  000E                     	;# 
   431  0010                     	;# 
   432  0011                     	;# 
   433  0012                     	;# 
   434  0013                     	;# 
   435  0014                     	;# 
   436  0015                     	;# 
   437  0015                     	;# 
   438  0016                     	;# 
   439  0016                     	;# 
   440  0017                     	;# 
   441  0018                     	;# 
   442  0019                     	;# 
   443  0019                     	;# 
   444  001A                     	;# 
   445  001B                     	;# 
   446  001C                     	;# 
   447  001D                     	;# 
   448  001E                     	;# 
   449  001F                     	;# 
   450  008C                     	;# 
   451  008E                     	;# 
   452  0090                     	;# 
   453  0091                     	;# 
   454  0092                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0097                     	;# 
   458  009B                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  010C                     	;# 
   465  010E                     	;# 
   466  0111                     	;# 
   467  0112                     	;# 
   468  0113                     	;# 
   469  0114                     	;# 
   470  0115                     	;# 
   471  0116                     	;# 
   472  0117                     	;# 
   473  0118                     	;# 
   474  0119                     	;# 
   475  018C                     	;# 
   476  018E                     	;# 
   477  0199                     	;# 
   478  0199                     	;# 
   479  0199                     	;# 
   480  019A                     	;# 
   481  019A                     	;# 
   482  019A                     	;# 
   483  019B                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019C                     	;# 
   489  019C                     	;# 
   490  019C                     	;# 
   491  019D                     	;# 
   492  019D                     	;# 
   493  019D                     	;# 
   494  019E                     	;# 
   495  019E                     	;# 
   496  019E                     	;# 
   497  019F                     	;# 
   498  019F                     	;# 
   499  019F                     	;# 
   500  019F                     	;# 
   501  019F                     	;# 
   502  020C                     	;# 
   503  020E                     	;# 
   504  0211                     	;# 
   505  0211                     	;# 
   506  0212                     	;# 
   507  0212                     	;# 
   508  0213                     	;# 
   509  0213                     	;# 
   510  0214                     	;# 
   511  0214                     	;# 
   512  0215                     	;# 
   513  0215                     	;# 
   514  0215                     	;# 
   515  0215                     	;# 
   516  0216                     	;# 
   517  0216                     	;# 
   518  0217                     	;# 
   519  0217                     	;# 
   520  0219                     	;# 
   521  021A                     	;# 
   522  021B                     	;# 
   523  021C                     	;# 
   524  021D                     	;# 
   525  021D                     	;# 
   526  021E                     	;# 
   527  021F                     	;# 
   528  028C                     	;# 
   529  028E                     	;# 
   530  0291                     	;# 
   531  0291                     	;# 
   532  0292                     	;# 
   533  0293                     	;# 
   534  0294                     	;# 
   535  0295                     	;# 
   536  0295                     	;# 
   537  0296                     	;# 
   538  0297                     	;# 
   539  0298                     	;# 
   540  029F                     	;# 
   541  030C                     	;# 
   542  030E                     	;# 
   543  0311                     	;# 
   544  0311                     	;# 
   545  0312                     	;# 
   546  0313                     	;# 
   547  0314                     	;# 
   548  0315                     	;# 
   549  0315                     	;# 
   550  0316                     	;# 
   551  0317                     	;# 
   552  0318                     	;# 
   553  038C                     	;# 
   554  038E                     	;# 
   555  0391                     	;# 
   556  0392                     	;# 
   557  0393                     	;# 
   558  0397                     	;# 
   559  0398                     	;# 
   560  0399                     	;# 
   561  039A                     	;# 
   562  039C                     	;# 
   563  039D                     	;# 
   564  039E                     	;# 
   565  039F                     	;# 
   566  0411                     	;# 
   567  0411                     	;# 
   568  0412                     	;# 
   569  0413                     	;# 
   570  0414                     	;# 
   571  0415                     	;# 
   572  0416                     	;# 
   573  0417                     	;# 
   574  0418                     	;# 
   575  0418                     	;# 
   576  0419                     	;# 
   577  041A                     	;# 
   578  041B                     	;# 
   579  041C                     	;# 
   580  041D                     	;# 
   581  041E                     	;# 
   582  041F                     	;# 
   583  0498                     	;# 
   584  0498                     	;# 
   585  0499                     	;# 
   586  049A                     	;# 
   587  049B                     	;# 
   588  049B                     	;# 
   589  049C                     	;# 
   590  049D                     	;# 
   591  049E                     	;# 
   592  049F                     	;# 
   593  0617                     	;# 
   594  0618                     	;# 
   595  0619                     	;# 
   596  0619                     	;# 
   597  061A                     	;# 
   598  061B                     	;# 
   599  061C                     	;# 
   600  061C                     	;# 
   601  061F                     	;# 
   602  0691                     	;# 
   603  0692                     	;# 
   604  0693                     	;# 
   605  0694                     	;# 
   606  0695                     	;# 
   607  0696                     	;# 
   608  0697                     	;# 
   609  0698                     	;# 
   610  0699                     	;# 
   611  0711                     	;# 
   612  0712                     	;# 
   613  0713                     	;# 
   614  0714                     	;# 
   615  0715                     	;# 
   616  0716                     	;# 
   617  0717                     	;# 
   618  0718                     	;# 
   619  0719                     	;# 
   620  0891                     	;# 
   621  0891                     	;# 
   622  0891                     	;# 
   623  0891                     	;# 
   624  0891                     	;# 
   625  0891                     	;# 
   626  0892                     	;# 
   627  0892                     	;# 
   628  0892                     	;# 
   629  0893                     	;# 
   630  0893                     	;# 
   631  0893                     	;# 
   632  0893                     	;# 
   633  0893                     	;# 
   634  0893                     	;# 
   635  0894                     	;# 
   636  0894                     	;# 
   637  0894                     	;# 
   638  0895                     	;# 
   639  0895                     	;# 
   640  0895                     	;# 
   641  0896                     	;# 
   642  0896                     	;# 
   643  0896                     	;# 
   644  089B                     	;# 
   645  0911                     	;# 
   646  0912                     	;# 
   647  0913                     	;# 
   648  0914                     	;# 
   649  0915                     	;# 
   650  0916                     	;# 
   651  0918                     	;# 
   652  0919                     	;# 
   653  091A                     	;# 
   654  091B                     	;# 
   655  091C                     	;# 
   656  091D                     	;# 
   657  091E                     	;# 
   658  091F                     	;# 
   659  0E0F                     	;# 
   660  0E10                     	;# 
   661  0E11                     	;# 
   662  0E12                     	;# 
   663  0E13                     	;# 
   664  0E14                     	;# 
   665  0E15                     	;# 
   666  0E16                     	;# 
   667  0E17                     	;# 
   668  0E18                     	;# 
   669  0E19                     	;# 
   670  0E1A                     	;# 
   671  0E1B                     	;# 
   672  0E1C                     	;# 
   673  0E1D                     	;# 
   674  0E1E                     	;# 
   675  0E1F                     	;# 
   676  0E20                     	;# 
   677  0E21                     	;# 
   678  0E22                     	;# 
   679  0E24                     	;# 
   680  0E25                     	;# 
   681  0E28                     	;# 
   682  0E29                     	;# 
   683  0E2A                     	;# 
   684  0E2B                     	;# 
   685  0E2C                     	;# 
   686  0E2D                     	;# 
   687  0E2E                     	;# 
   688  0E2F                     	;# 
   689  0E90                     	;# 
   690  0E91                     	;# 
   691  0E92                     	;# 
   692  0E94                     	;# 
   693  0E95                     	;# 
   694  0EA0                     	;# 
   695  0EA1                     	;# 
   696  0EA2                     	;# 
   697  0EA3                     	;# 
   698  0EA4                     	;# 
   699  0EA5                     	;# 
   700  0F0F                     	;# 
   701  0F10                     	;# 
   702  0F11                     	;# 
   703  0F12                     	;# 
   704  0F13                     	;# 
   705  0F14                     	;# 
   706  0F15                     	;# 
   707  0F16                     	;# 
   708  0F17                     	;# 
   709  0F18                     	;# 
   710  0F19                     	;# 
   711  0F1A                     	;# 
   712  0F1B                     	;# 
   713  0F1C                     	;# 
   714  0F1D                     	;# 
   715  0F1E                     	;# 
   716  0F1F                     	;# 
   717  0F20                     	;# 
   718  0F21                     	;# 
   719  0F22                     	;# 
   720  0F23                     	;# 
   721  0F24                     	;# 
   722  0F25                     	;# 
   723  0F26                     	;# 
   724  0F27                     	;# 
   725  0F28                     	;# 
   726  0F29                     	;# 
   727  0F2A                     	;# 
   728  0F2B                     	;# 
   729  0F2C                     	;# 
   730  0F2D                     	;# 
   731  0F2E                     	;# 
   732  0F2F                     	;# 
   733  0F30                     	;# 
   734  0F31                     	;# 
   735  0F32                     	;# 
   736  0F33                     	;# 
   737  0F34                     	;# 
   738  0F35                     	;# 
   739  0F36                     	;# 
   740  0F37                     	;# 
   741  0FE4                     	;# 
   742  0FE5                     	;# 
   743  0FE6                     	;# 
   744  0FE7                     	;# 
   745  0FE8                     	;# 
   746  0FE9                     	;# 
   747  0FEA                     	;# 
   748  0FEB                     	;# 
   749  0FED                     	;# 
   750  0FEE                     	;# 
   751  0FEF                     	;# 
   752  0000                     	;# 
   753  0001                     	;# 
   754  0002                     	;# 
   755  0003                     	;# 
   756  0004                     	;# 
   757  0005                     	;# 
   758  0006                     	;# 
   759  0007                     	;# 
   760  0008                     	;# 
   761  0009                     	;# 
   762  000A                     	;# 
   763  000B                     	;# 
   764  000C                     	;# 
   765  000E                     	;# 
   766  0010                     	;# 
   767  0011                     	;# 
   768  0012                     	;# 
   769  0013                     	;# 
   770  0014                     	;# 
   771  0015                     	;# 
   772  0015                     	;# 
   773  0016                     	;# 
   774  0016                     	;# 
   775  0017                     	;# 
   776  0018                     	;# 
   777  0019                     	;# 
   778  0019                     	;# 
   779  001A                     	;# 
   780  001B                     	;# 
   781  001C                     	;# 
   782  001D                     	;# 
   783  001E                     	;# 
   784  001F                     	;# 
   785  008C                     	;# 
   786  008E                     	;# 
   787  0090                     	;# 
   788  0091                     	;# 
   789  0092                     	;# 
   790  0093                     	;# 
   791  0094                     	;# 
   792  0097                     	;# 
   793  009B                     	;# 
   794  009B                     	;# 
   795  009C                     	;# 
   796  009D                     	;# 
   797  009E                     	;# 
   798  009F                     	;# 
   799  010C                     	;# 
   800  010E                     	;# 
   801  0111                     	;# 
   802  0112                     	;# 
   803  0113                     	;# 
   804  0114                     	;# 
   805  0115                     	;# 
   806  0116                     	;# 
   807  0117                     	;# 
   808  0118                     	;# 
   809  0119                     	;# 
   810  018C                     	;# 
   811  018E                     	;# 
   812  0199                     	;# 
   813  0199                     	;# 
   814  0199                     	;# 
   815  019A                     	;# 
   816  019A                     	;# 
   817  019A                     	;# 
   818  019B                     	;# 
   819  019B                     	;# 
   820  019B                     	;# 
   821  019B                     	;# 
   822  019B                     	;# 
   823  019C                     	;# 
   824  019C                     	;# 
   825  019C                     	;# 
   826  019D                     	;# 
   827  019D                     	;# 
   828  019D                     	;# 
   829  019E                     	;# 
   830  019E                     	;# 
   831  019E                     	;# 
   832  019F                     	;# 
   833  019F                     	;# 
   834  019F                     	;# 
   835  019F                     	;# 
   836  019F                     	;# 
   837  020C                     	;# 
   838  020E                     	;# 
   839  0211                     	;# 
   840  0211                     	;# 
   841  0212                     	;# 
   842  0212                     	;# 
   843  0213                     	;# 
   844  0213                     	;# 
   845  0214                     	;# 
   846  0214                     	;# 
   847  0215                     	;# 
   848  0215                     	;# 
   849  0215                     	;# 
   850  0215                     	;# 
   851  0216                     	;# 
   852  0216                     	;# 
   853  0217                     	;# 
   854  0217                     	;# 
   855  0219                     	;# 
   856  021A                     	;# 
   857  021B                     	;# 
   858  021C                     	;# 
   859  021D                     	;# 
   860  021D                     	;# 
   861  021E                     	;# 
   862  021F                     	;# 
   863  028C                     	;# 
   864  028E                     	;# 
   865  0291                     	;# 
   866  0291                     	;# 
   867  0292                     	;# 
   868  0293                     	;# 
   869  0294                     	;# 
   870  0295                     	;# 
   871  0295                     	;# 
   872  0296                     	;# 
   873  0297                     	;# 
   874  0298                     	;# 
   875  029F                     	;# 
   876  030C                     	;# 
   877  030E                     	;# 
   878  0311                     	;# 
   879  0311                     	;# 
   880  0312                     	;# 
   881  0313                     	;# 
   882  0314                     	;# 
   883  0315                     	;# 
   884  0315                     	;# 
   885  0316                     	;# 
   886  0317                     	;# 
   887  0318                     	;# 
   888  038C                     	;# 
   889  038E                     	;# 
   890  0391                     	;# 
   891  0392                     	;# 
   892  0393                     	;# 
   893  0397                     	;# 
   894  0398                     	;# 
   895  0399                     	;# 
   896  039A                     	;# 
   897  039C                     	;# 
   898  039D                     	;# 
   899  039E                     	;# 
   900  039F                     	;# 
   901  0411                     	;# 
   902  0411                     	;# 
   903  0412                     	;# 
   904  0413                     	;# 
   905  0414                     	;# 
   906  0415                     	;# 
   907  0416                     	;# 
   908  0417                     	;# 
   909  0418                     	;# 
   910  0418                     	;# 
   911  0419                     	;# 
   912  041A                     	;# 
   913  041B                     	;# 
   914  041C                     	;# 
   915  041D                     	;# 
   916  041E                     	;# 
   917  041F                     	;# 
   918  0498                     	;# 
   919  0498                     	;# 
   920  0499                     	;# 
   921  049A                     	;# 
   922  049B                     	;# 
   923  049B                     	;# 
   924  049C                     	;# 
   925  049D                     	;# 
   926  049E                     	;# 
   927  049F                     	;# 
   928  0617                     	;# 
   929  0618                     	;# 
   930  0619                     	;# 
   931  0619                     	;# 
   932  061A                     	;# 
   933  061B                     	;# 
   934  061C                     	;# 
   935  061C                     	;# 
   936  061F                     	;# 
   937  0691                     	;# 
   938  0692                     	;# 
   939  0693                     	;# 
   940  0694                     	;# 
   941  0695                     	;# 
   942  0696                     	;# 
   943  0697                     	;# 
   944  0698                     	;# 
   945  0699                     	;# 
   946  0711                     	;# 
   947  0712                     	;# 
   948  0713                     	;# 
   949  0714                     	;# 
   950  0715                     	;# 
   951  0716                     	;# 
   952  0717                     	;# 
   953  0718                     	;# 
   954  0719                     	;# 
   955  0891                     	;# 
   956  0891                     	;# 
   957  0891                     	;# 
   958  0891                     	;# 
   959  0891                     	;# 
   960  0891                     	;# 
   961  0892                     	;# 
   962  0892                     	;# 
   963  0892                     	;# 
   964  0893                     	;# 
   965  0893                     	;# 
   966  0893                     	;# 
   967  0893                     	;# 
   968  0893                     	;# 
   969  0893                     	;# 
   970  0894                     	;# 
   971  0894                     	;# 
   972  0894                     	;# 
   973  0895                     	;# 
   974  0895                     	;# 
   975  0895                     	;# 
   976  0896                     	;# 
   977  0896                     	;# 
   978  0896                     	;# 
   979  089B                     	;# 
   980  0911                     	;# 
   981  0912                     	;# 
   982  0913                     	;# 
   983  0914                     	;# 
   984  0915                     	;# 
   985  0916                     	;# 
   986  0918                     	;# 
   987  0919                     	;# 
   988  091A                     	;# 
   989  091B                     	;# 
   990  091C                     	;# 
   991  091D                     	;# 
   992  091E                     	;# 
   993  091F                     	;# 
   994  0E0F                     	;# 
   995  0E10                     	;# 
   996  0E11                     	;# 
   997  0E12                     	;# 
   998  0E13                     	;# 
   999  0E14                     	;# 
  1000  0E15                     	;# 
  1001  0E16                     	;# 
  1002  0E17                     	;# 
  1003  0E18                     	;# 
  1004  0E19                     	;# 
  1005  0E1A                     	;# 
  1006  0E1B                     	;# 
  1007  0E1C                     	;# 
  1008  0E1D                     	;# 
  1009  0E1E                     	;# 
  1010  0E1F                     	;# 
  1011  0E20                     	;# 
  1012  0E21                     	;# 
  1013  0E22                     	;# 
  1014  0E24                     	;# 
  1015  0E25                     	;# 
  1016  0E28                     	;# 
  1017  0E29                     	;# 
  1018  0E2A                     	;# 
  1019  0E2B                     	;# 
  1020  0E2C                     	;# 
  1021  0E2D                     	;# 
  1022  0E2E                     	;# 
  1023  0E2F                     	;# 
  1024  0E90                     	;# 
  1025  0E91                     	;# 
  1026  0E92                     	;# 
  1027  0E94                     	;# 
  1028  0E95                     	;# 
  1029  0EA0                     	;# 
  1030  0EA1                     	;# 
  1031  0EA2                     	;# 
  1032  0EA3                     	;# 
  1033  0EA4                     	;# 
  1034  0EA5                     	;# 
  1035  0F0F                     	;# 
  1036  0F10                     	;# 
  1037  0F11                     	;# 
  1038  0F12                     	;# 
  1039  0F13                     	;# 
  1040  0F14                     	;# 
  1041  0F15                     	;# 
  1042  0F16                     	;# 
  1043  0F17                     	;# 
  1044  0F18                     	;# 
  1045  0F19                     	;# 
  1046  0F1A                     	;# 
  1047  0F1B                     	;# 
  1048  0F1C                     	;# 
  1049  0F1D                     	;# 
  1050  0F1E                     	;# 
  1051  0F1F                     	;# 
  1052  0F20                     	;# 
  1053  0F21                     	;# 
  1054  0F22                     	;# 
  1055  0F23                     	;# 
  1056  0F24                     	;# 
  1057  0F25                     	;# 
  1058  0F26                     	;# 
  1059  0F27                     	;# 
  1060  0F28                     	;# 
  1061  0F29                     	;# 
  1062  0F2A                     	;# 
  1063  0F2B                     	;# 
  1064  0F2C                     	;# 
  1065  0F2D                     	;# 
  1066  0F2E                     	;# 
  1067  0F2F                     	;# 
  1068  0F30                     	;# 
  1069  0F31                     	;# 
  1070  0F32                     	;# 
  1071  0F33                     	;# 
  1072  0F34                     	;# 
  1073  0F35                     	;# 
  1074  0F36                     	;# 
  1075  0F37                     	;# 
  1076  0FE4                     	;# 
  1077  0FE5                     	;# 
  1078  0FE6                     	;# 
  1079  0FE7                     	;# 
  1080  0FE8                     	;# 
  1081  0FE9                     	;# 
  1082  0FEA                     	;# 
  1083  0FEB                     	;# 
  1084  0FED                     	;# 
  1085  0FEE                     	;# 
  1086  0FEF                     	;# 
  1087  0000                     	;# 
  1088  0001                     	;# 
  1089  0002                     	;# 
  1090  0003                     	;# 
  1091  0004                     	;# 
  1092  0005                     	;# 
  1093  0006                     	;# 
  1094  0007                     	;# 
  1095  0008                     	;# 
  1096  0009                     	;# 
  1097  000A                     	;# 
  1098  000B                     	;# 
  1099  000C                     	;# 
  1100  000E                     	;# 
  1101  0010                     	;# 
  1102  0011                     	;# 
  1103  0012                     	;# 
  1104  0013                     	;# 
  1105  0014                     	;# 
  1106  0015                     	;# 
  1107  0015                     	;# 
  1108  0016                     	;# 
  1109  0016                     	;# 
  1110  0017                     	;# 
  1111  0018                     	;# 
  1112  0019                     	;# 
  1113  0019                     	;# 
  1114  001A                     	;# 
  1115  001B                     	;# 
  1116  001C                     	;# 
  1117  001D                     	;# 
  1118  001E                     	;# 
  1119  001F                     	;# 
  1120  008C                     	;# 
  1121  008E                     	;# 
  1122  0090                     	;# 
  1123  0091                     	;# 
  1124  0092                     	;# 
  1125  0093                     	;# 
  1126  0094                     	;# 
  1127  0097                     	;# 
  1128  009B                     	;# 
  1129  009B                     	;# 
  1130  009C                     	;# 
  1131  009D                     	;# 
  1132  009E                     	;# 
  1133  009F                     	;# 
  1134  010C                     	;# 
  1135  010E                     	;# 
  1136  0111                     	;# 
  1137  0112                     	;# 
  1138  0113                     	;# 
  1139  0114                     	;# 
  1140  0115                     	;# 
  1141  0116                     	;# 
  1142  0117                     	;# 
  1143  0118                     	;# 
  1144  0119                     	;# 
  1145  018C                     	;# 
  1146  018E                     	;# 
  1147  0199                     	;# 
  1148  0199                     	;# 
  1149  0199                     	;# 
  1150  019A                     	;# 
  1151  019A                     	;# 
  1152  019A                     	;# 
  1153  019B                     	;# 
  1154  019B                     	;# 
  1155  019B                     	;# 
  1156  019B                     	;# 
  1157  019B                     	;# 
  1158  019C                     	;# 
  1159  019C                     	;# 
  1160  019C                     	;# 
  1161  019D                     	;# 
  1162  019D                     	;# 
  1163  019D                     	;# 
  1164  019E                     	;# 
  1165  019E                     	;# 
  1166  019E                     	;# 
  1167  019F                     	;# 
  1168  019F                     	;# 
  1169  019F                     	;# 
  1170  019F                     	;# 
  1171  019F                     	;# 
  1172  020C                     	;# 
  1173  020E                     	;# 
  1174  0211                     	;# 
  1175  0211                     	;# 
  1176  0212                     	;# 
  1177  0212                     	;# 
  1178  0213                     	;# 
  1179  0213                     	;# 
  1180  0214                     	;# 
  1181  0214                     	;# 
  1182  0215                     	;# 
  1183  0215                     	;# 
  1184  0215                     	;# 
  1185  0215                     	;# 
  1186  0216                     	;# 
  1187  0216                     	;# 
  1188  0217                     	;# 
  1189  0217                     	;# 
  1190  0219                     	;# 
  1191  021A                     	;# 
  1192  021B                     	;# 
  1193  021C                     	;# 
  1194  021D                     	;# 
  1195  021D                     	;# 
  1196  021E                     	;# 
  1197  021F                     	;# 
  1198  028C                     	;# 
  1199  028E                     	;# 
  1200  0291                     	;# 
  1201  0291                     	;# 
  1202  0292                     	;# 
  1203  0293                     	;# 
  1204  0294                     	;# 
  1205  0295                     	;# 
  1206  0295                     	;# 
  1207  0296                     	;# 
  1208  0297                     	;# 
  1209  0298                     	;# 
  1210  029F                     	;# 
  1211  030C                     	;# 
  1212  030E                     	;# 
  1213  0311                     	;# 
  1214  0311                     	;# 
  1215  0312                     	;# 
  1216  0313                     	;# 
  1217  0314                     	;# 
  1218  0315                     	;# 
  1219  0315                     	;# 
  1220  0316                     	;# 
  1221  0317                     	;# 
  1222  0318                     	;# 
  1223  038C                     	;# 
  1224  038E                     	;# 
  1225  0391                     	;# 
  1226  0392                     	;# 
  1227  0393                     	;# 
  1228  0397                     	;# 
  1229  0398                     	;# 
  1230  0399                     	;# 
  1231  039A                     	;# 
  1232  039C                     	;# 
  1233  039D                     	;# 
  1234  039E                     	;# 
  1235  039F                     	;# 
  1236  0411                     	;# 
  1237  0411                     	;# 
  1238  0412                     	;# 
  1239  0413                     	;# 
  1240  0414                     	;# 
  1241  0415                     	;# 
  1242  0416                     	;# 
  1243  0417                     	;# 
  1244  0418                     	;# 
  1245  0418                     	;# 
  1246  0419                     	;# 
  1247  041A                     	;# 
  1248  041B                     	;# 
  1249  041C                     	;# 
  1250  041D                     	;# 
  1251  041E                     	;# 
  1252  041F                     	;# 
  1253  0498                     	;# 
  1254  0498                     	;# 
  1255  0499                     	;# 
  1256  049A                     	;# 
  1257  049B                     	;# 
  1258  049B                     	;# 
  1259  049C                     	;# 
  1260  049D                     	;# 
  1261  049E                     	;# 
  1262  049F                     	;# 
  1263  0617                     	;# 
  1264  0618                     	;# 
  1265  0619                     	;# 
  1266  0619                     	;# 
  1267  061A                     	;# 
  1268  061B                     	;# 
  1269  061C                     	;# 
  1270  061C                     	;# 
  1271  061F                     	;# 
  1272  0691                     	;# 
  1273  0692                     	;# 
  1274  0693                     	;# 
  1275  0694                     	;# 
  1276  0695                     	;# 
  1277  0696                     	;# 
  1278  0697                     	;# 
  1279  0698                     	;# 
  1280  0699                     	;# 
  1281  0711                     	;# 
  1282  0712                     	;# 
  1283  0713                     	;# 
  1284  0714                     	;# 
  1285  0715                     	;# 
  1286  0716                     	;# 
  1287  0717                     	;# 
  1288  0718                     	;# 
  1289  0719                     	;# 
  1290  0891                     	;# 
  1291  0891                     	;# 
  1292  0891                     	;# 
  1293  0891                     	;# 
  1294  0891                     	;# 
  1295  0891                     	;# 
  1296  0892                     	;# 
  1297  0892                     	;# 
  1298  0892                     	;# 
  1299  0893                     	;# 
  1300  0893                     	;# 
  1301  0893                     	;# 
  1302  0893                     	;# 
  1303  0893                     	;# 
  1304  0893                     	;# 
  1305  0894                     	;# 
  1306  0894                     	;# 
  1307  0894                     	;# 
  1308  0895                     	;# 
  1309  0895                     	;# 
  1310  0895                     	;# 
  1311  0896                     	;# 
  1312  0896                     	;# 
  1313  0896                     	;# 
  1314  089B                     	;# 
  1315  0911                     	;# 
  1316  0912                     	;# 
  1317  0913                     	;# 
  1318  0914                     	;# 
  1319  0915                     	;# 
  1320  0916                     	;# 
  1321  0918                     	;# 
  1322  0919                     	;# 
  1323  091A                     	;# 
  1324  091B                     	;# 
  1325  091C                     	;# 
  1326  091D                     	;# 
  1327  091E                     	;# 
  1328  091F                     	;# 
  1329  0E0F                     	;# 
  1330  0E10                     	;# 
  1331  0E11                     	;# 
  1332  0E12                     	;# 
  1333  0E13                     	;# 
  1334  0E14                     	;# 
  1335  0E15                     	;# 
  1336  0E16                     	;# 
  1337  0E17                     	;# 
  1338  0E18                     	;# 
  1339  0E19                     	;# 
  1340  0E1A                     	;# 
  1341  0E1B                     	;# 
  1342  0E1C                     	;# 
  1343  0E1D                     	;# 
  1344  0E1E                     	;# 
  1345  0E1F                     	;# 
  1346  0E20                     	;# 
  1347  0E21                     	;# 
  1348  0E22                     	;# 
  1349  0E24                     	;# 
  1350  0E25                     	;# 
  1351  0E28                     	;# 
  1352  0E29                     	;# 
  1353  0E2A                     	;# 
  1354  0E2B                     	;# 
  1355  0E2C                     	;# 
  1356  0E2D                     	;# 
  1357  0E2E                     	;# 
  1358  0E2F                     	;# 
  1359  0E90                     	;# 
  1360  0E91                     	;# 
  1361  0E92                     	;# 
  1362  0E94                     	;# 
  1363  0E95                     	;# 
  1364  0EA0                     	;# 
  1365  0EA1                     	;# 
  1366  0EA2                     	;# 
  1367  0EA3                     	;# 
  1368  0EA4                     	;# 
  1369  0EA5                     	;# 
  1370  0F0F                     	;# 
  1371  0F10                     	;# 
  1372  0F11                     	;# 
  1373  0F12                     	;# 
  1374  0F13                     	;# 
  1375  0F14                     	;# 
  1376  0F15                     	;# 
  1377  0F16                     	;# 
  1378  0F17                     	;# 
  1379  0F18                     	;# 
  1380  0F19                     	;# 
  1381  0F1A                     	;# 
  1382  0F1B                     	;# 
  1383  0F1C                     	;# 
  1384  0F1D                     	;# 
  1385  0F1E                     	;# 
  1386  0F1F                     	;# 
  1387  0F20                     	;# 
  1388  0F21                     	;# 
  1389  0F22                     	;# 
  1390  0F23                     	;# 
  1391  0F24                     	;# 
  1392  0F25                     	;# 
  1393  0F26                     	;# 
  1394  0F27                     	;# 
  1395  0F28                     	;# 
  1396  0F29                     	;# 
  1397  0F2A                     	;# 
  1398  0F2B                     	;# 
  1399  0F2C                     	;# 
  1400  0F2D                     	;# 
  1401  0F2E                     	;# 
  1402  0F2F                     	;# 
  1403  0F30                     	;# 
  1404  0F31                     	;# 
  1405  0F32                     	;# 
  1406  0F33                     	;# 
  1407  0F34                     	;# 
  1408  0F35                     	;# 
  1409  0F36                     	;# 
  1410  0F37                     	;# 
  1411  0FE4                     	;# 
  1412  0FE5                     	;# 
  1413  0FE6                     	;# 
  1414  0FE7                     	;# 
  1415  0FE8                     	;# 
  1416  0FE9                     	;# 
  1417  0FEA                     	;# 
  1418  0FEB                     	;# 
  1419  0FED                     	;# 
  1420  0FEE                     	;# 
  1421  0FEF                     	;# 
  1422                           
  1423 ;; Function _get_clock_source is unused but had its address taken
  1424  0000                     
  1425 ;; Function _switch_clock is unused but had its address taken
  1426  0000                     
  1427 ;; Function _set_clock_to_pin is unused but had its address taken
  1428  0000                     
  1429 ;; Function _set_pin is unused but had its address taken
  1430  0000                     
  1431 ;; Function _reset_pin is unused but had its address taken
  1432  0000                     
  1433 ;; Function _toggle_pin is unused but had its address taken
  1434  0000                     
  1435 ;; Function _output_pps is unused but had its address taken
  1436  0000                     
  1437 ;; Function _watchdog_did_overflow is unused but had its address taken
  1438  0000                     
  1439 ;; Function _adc_initialize is unused but had its address taken
  1440  0000                     
  1441 ;; Function _adc_enable is unused but had its address taken
  1442  0000                     
  1443 ;; Function _adc_disable is unused but had its address taken
  1444  0000                     
  1445 ;; Function _adc_measure_pin is unused but had its address taken
  1446  0000                     
  1447 ;; Function _adc_measure_channel is unused but had its address taken
  1448  0000                     
  1449 ;; Function _initialize_and_enable_interrupt_timer is unused but had its address taken
  1450  0000                     
  1451 ;; Function _wait_for_register_flag_us is unused but had its address taken
  1452  0000                     
  1453 ;; Function _wait_for_register_flag_ms is unused but had its address taken
  1454  0000                     
  1455 ;; Function _led_on is unused but had its address taken
  1456  0000                     
  1457 ;; Function _led_flash is unused but had its address taken
  1458  0000                     
  1459                           	psect	idataBANK0
  1460  0375                     __pidataBANK0:	
  1461                           
  1462                           ;initializer for _low_speed_clock
  1463  0375  3418               	retlw	24
  1464  0376  3479               	retlw	121
  1465  0377  3400               	retlw	0
  1466  0378  3400               	retlw	0
  1467  0379  3404               	retlw	4
  1468  037A  3400               	retlw	0
  1469                           
  1470                           ;initializer for _high_speed_uart_clock
  1471  037B  3400               	retlw	0
  1472  037C  3448               	retlw	72
  1473  037D  34E8               	retlw	232
  1474  037E  3401               	retlw	1
  1475  037F  3400               	retlw	0
  1476  0380  3400               	retlw	0
  1477                           
  1478                           	psect	stringtext1
  1479  0800                     __pstringtext1:	
  1480  0800                     _gpio:	
  1481  0800  3473               	retlw	low _pin_mode
  1482  0801  3405               	retlw	high _pin_mode
  1483  0802  34B9               	retlw	low _write_pin
  1484  0803  3403               	retlw	high _write_pin
  1485  0804  3400               	retlw	0
  1486  0805  3400               	retlw	0
  1487  0806  3400               	retlw	0
  1488  0807  3400               	retlw	0
  1489  0808  3400               	retlw	0
  1490  0809  3400               	retlw	0
  1491  080A  3400               	retlw	0
  1492  080B  3400               	retlw	0
  1493  080C  3400               	retlw	0
  1494  080D  3400               	retlw	0
  1495  080E  3400               	retlw	0
  1496  080F  3400               	retlw	0
  1497  0810                     __end_of_gpio:	
  1498                           
  1499                           	psect	stringtext2
  1500  0810                     __pstringtext2:	
  1501  0810                     _display:	
  1502  0810  34DA               	retlw	low _initialize
  1503  0811  3404               	retlw	high _initialize
  1504  0812  3467               	retlw	low _pattern_scroll_out
  1505  0813  3404               	retlw	high _pattern_scroll_out
  1506  0814  34F4               	retlw	low _pattern_scroll_in
  1507  0815  3403               	retlw	high _pattern_scroll_in
  1508  0816  3400               	retlw	0
  1509  0817  3400               	retlw	0
  1510  0818  346A               	retlw	low _led_off
  1511  0819  3403               	retlw	high _led_off
  1512  081A  3400               	retlw	0
  1513  081B  3400               	retlw	0
  1514  081C                     __end_of_display:	
  1515                           
  1516                           	psect	stringtext3
  1517  081C                     __pstringtext3:	
  1518  081C                     _adc:	
  1519  081C  3400               	retlw	0
  1520  081D  3400               	retlw	0
  1521  081E  3400               	retlw	0
  1522  081F  3400               	retlw	0
  1523  0820  3400               	retlw	0
  1524  0821  3400               	retlw	0
  1525  0822  3400               	retlw	0
  1526  0823  3400               	retlw	0
  1527  0824  3400               	retlw	0
  1528  0825  3400               	retlw	0
  1529  0826                     __end_of_adc:	
  1530                           
  1531                           	psect	stringtext4
  1532  0826                     __pstringtext4:	
  1533  0826                     _oscillator:	
  1534  0826  3400               	retlw	0
  1535  0827  3400               	retlw	0
  1536  0828  3457               	retlw	low _wait_for_startup_clock_ready
  1537  0829  3403               	retlw	high _wait_for_startup_clock_ready
  1538  082A  3400               	retlw	0
  1539  082B  3400               	retlw	0
  1540  082C  3400               	retlw	0
  1541  082D  3400               	retlw	0
  1542  082E                     __end_of_oscillator:	
  1543                           
  1544                           	psect	stringtext5
  1545  082E                     __pstringtext5:	
  1546  082E                     _led17:	
  1547  082E  340E               	retlw	14
  1548  082F  3400               	retlw	0
  1549  0830  3404               	retlw	4
  1550  0831  3414               	retlw	20
  1551  0832  34A4               	retlw	164
  1552  0833  340E               	retlw	14
  1553  0834  3414               	retlw	20
  1554  0835                     __end_of_led17:	
  1555                           
  1556                           	psect	stringtext6
  1557  0835                     __pstringtext6:	
  1558  0835                     _led16:	
  1559  0835  340E               	retlw	14
  1560  0836  3400               	retlw	0
  1561  0837  3404               	retlw	4
  1562  0838  3414               	retlw	20
  1563  0839  34A4               	retlw	164
  1564  083A  340E               	retlw	14
  1565  083B  3414               	retlw	20
  1566  083C                     __end_of_led16:	
  1567                           
  1568                           	psect	stringtext7
  1569  083C                     __pstringtext7:	
  1570  083C                     _led14:	
  1571  083C  340E               	retlw	14
  1572  083D  3400               	retlw	0
  1573  083E  3403               	retlw	3
  1574  083F  3413               	retlw	19
  1575  0840  34A3               	retlw	163
  1576  0841  340E               	retlw	14
  1577  0842  3413               	retlw	19
  1578  0843                     __end_of_led14:	
  1579                           
  1580                           	psect	stringtext8
  1581  0843                     __pstringtext8:	
  1582  0843                     _led12:	
  1583  0843  340E               	retlw	14
  1584  0844  3400               	retlw	0
  1585  0845  3402               	retlw	2
  1586  0846  3412               	retlw	18
  1587  0847  34A2               	retlw	162
  1588  0848  340E               	retlw	14
  1589  0849  3412               	retlw	18
  1590  084A                     __end_of_led12:	
  1591                           
  1592                           	psect	stringtext9
  1593  084A                     __pstringtext9:	
  1594  084A                     _led10:	
  1595  084A  340E               	retlw	14
  1596  084B  3400               	retlw	0
  1597  084C  3401               	retlw	1
  1598  084D  3411               	retlw	17
  1599  084E  34A1               	retlw	161
  1600  084F  340E               	retlw	14
  1601  0850  3411               	retlw	17
  1602  0851                     __end_of_led10:	
  1603                           
  1604                           	psect	stringtext10
  1605  0851                     __pstringtext10:	
  1606  0851                     _led9:	
  1607  0851  340E               	retlw	14
  1608  0852  3400               	retlw	0
  1609  0853  3401               	retlw	1
  1610  0854  3411               	retlw	17
  1611  0855  34A1               	retlw	161
  1612  0856  340E               	retlw	14
  1613  0857  3411               	retlw	17
  1614  0858                     __end_of_led9:	
  1615                           
  1616                           	psect	stringtext11
  1617  0858                     __pstringtext11:	
  1618  0858                     _led6:	
  1619  0858  340C               	retlw	12
  1620  0859  3400               	retlw	0
  1621  085A  3405               	retlw	5
  1622  085B  3405               	retlw	5
  1623  085C  3495               	retlw	149
  1624  085D  340E               	retlw	14
  1625  085E  3405               	retlw	5
  1626  085F                     __end_of_led6:	
  1627                           
  1628                           	psect	stringtext12
  1629  085F                     __pstringtext12:	
  1630  085F                     _led4:	
  1631  085F  340C               	retlw	12
  1632  0860  3400               	retlw	0
  1633  0861  3404               	retlw	4
  1634  0862  3404               	retlw	4
  1635  0863  3494               	retlw	148
  1636  0864  340E               	retlw	14
  1637  0865  3404               	retlw	4
  1638  0866                     __end_of_led4:	
  1639                           
  1640                           	psect	stringtext13
  1641  0866                     __pstringtext13:	
  1642  0866                     _led2:	
  1643  0866  340C               	retlw	12
  1644  0867  3400               	retlw	0
  1645  0868  3402               	retlw	2
  1646  0869  3402               	retlw	2
  1647  086A  3492               	retlw	146
  1648  086B  340E               	retlw	14
  1649  086C  3402               	retlw	2
  1650  086D                     __end_of_led2:	
  1651                           
  1652                           	psect	stringtext14
  1653  08AC                     __pstringtext14:	
  1654  08AC                     _system_time:	
  1655  08AC  3400               	retlw	0
  1656  08AD  3400               	retlw	0
  1657  08AE  3400               	retlw	0
  1658  08AF  3400               	retlw	0
  1659  08B0  3400               	retlw	0
  1660  08B1  3400               	retlw	0
  1661  08B2                     __end_of_system_time:	
  1662                           
  1663                           	psect	stringtext15
  1664  08B2                     __pstringtext15:	
  1665  08B2                     _watchdog:	
  1666  08B2  3462               	retlw	low _watchdog_initialize
  1667  08B3  3403               	retlw	high _watchdog_initialize
  1668  08B4  3456               	retlw	low _watchdog_clear
  1669  08B5  3403               	retlw	high _watchdog_clear
  1670  08B6  3400               	retlw	0
  1671  08B7  3400               	retlw	0
  1672  08B8                     __end_of_watchdog:	
  1673                           
  1674                           	psect	stringtext16
  1675  086D                     __pstringtext16:	
  1676  086D                     _led18:	
  1677  086D  340E               	retlw	14
  1678  086E  3400               	retlw	0
  1679  086F  3405               	retlw	5
  1680  0870  3415               	retlw	21
  1681  0871  34A5               	retlw	165
  1682  0872  340E               	retlw	14
  1683  0873  3415               	retlw	21
  1684  0874                     __end_of_led18:	
  1685                           
  1686                           	psect	stringtext17
  1687  0874                     __pstringtext17:	
  1688  0874                     _led15:	
  1689  0874  340E               	retlw	14
  1690  0875  3400               	retlw	0
  1691  0876  3404               	retlw	4
  1692  0877  3414               	retlw	20
  1693  0878  34A4               	retlw	164
  1694  0879  340E               	retlw	14
  1695  087A  3414               	retlw	20
  1696  087B                     __end_of_led15:	
  1697                           
  1698                           	psect	stringtext18
  1699  087B                     __pstringtext18:	
  1700  087B                     _led13:	
  1701  087B  340E               	retlw	14
  1702  087C  3400               	retlw	0
  1703  087D  3403               	retlw	3
  1704  087E  3413               	retlw	19
  1705  087F  34A3               	retlw	163
  1706  0880  340E               	retlw	14
  1707  0881  3413               	retlw	19
  1708  0882                     __end_of_led13:	
  1709                           
  1710                           	psect	stringtext19
  1711  0882                     __pstringtext19:	
  1712  0882                     _led11:	
  1713  0882  340E               	retlw	14
  1714  0883  3400               	retlw	0
  1715  0884  3402               	retlw	2
  1716  0885  3412               	retlw	18
  1717  0886  34A2               	retlw	162
  1718  0887  340E               	retlw	14
  1719  0888  3412               	retlw	18
  1720  0889                     __end_of_led11:	
  1721                           
  1722                           	psect	stringtext20
  1723  0889                     __pstringtext20:	
  1724  0889                     _led8:	
  1725  0889  340E               	retlw	14
  1726  088A  3400               	retlw	0
  1727  088B  3401               	retlw	1
  1728  088C  3411               	retlw	17
  1729  088D  34A1               	retlw	161
  1730  088E  340E               	retlw	14
  1731  088F  3411               	retlw	17
  1732  0890                     __end_of_led8:	
  1733                           
  1734                           	psect	stringtext21
  1735  0890                     __pstringtext21:	
  1736  0890                     _led7:	
  1737  0890  340E               	retlw	14
  1738  0891  3400               	retlw	0
  1739  0892  3400               	retlw	0
  1740  0893  3410               	retlw	16
  1741  0894  34A0               	retlw	160
  1742  0895  340E               	retlw	14
  1743  0896  3410               	retlw	16
  1744  0897                     __end_of_led7:	
  1745                           
  1746                           	psect	stringtext22
  1747  0897                     __pstringtext22:	
  1748  0897                     _led5:	
  1749  0897  340C               	retlw	12
  1750  0898  3400               	retlw	0
  1751  0899  3405               	retlw	5
  1752  089A  3405               	retlw	5
  1753  089B  3495               	retlw	149
  1754  089C  340E               	retlw	14
  1755  089D  3405               	retlw	5
  1756  089E                     __end_of_led5:	
  1757                           
  1758                           	psect	stringtext23
  1759  089E                     __pstringtext23:	
  1760  089E                     _led3:	
  1761  089E  340C               	retlw	12
  1762  089F  3400               	retlw	0
  1763  08A0  3404               	retlw	4
  1764  08A1  3404               	retlw	4
  1765  08A2  3494               	retlw	148
  1766  08A3  340E               	retlw	14
  1767  08A4  3404               	retlw	4
  1768  08A5                     __end_of_led3:	
  1769                           
  1770                           	psect	stringtext24
  1771  08A5                     __pstringtext24:	
  1772  08A5                     _led1:	
  1773  08A5  340C               	retlw	12
  1774  08A6  3400               	retlw	0
  1775  08A7  3402               	retlw	2
  1776  08A8  3402               	retlw	2
  1777  08A9  3492               	retlw	146
  1778  08AA  340E               	retlw	14
  1779  08AB  3402               	retlw	2
  1780  08AC                     __end_of_led1:	
  1781  001E                     _PR2	set	30
  1782  001D                     _TMR2	set	29
  1783  001F                     _T2CONbits	set	31
  1784  0016                     _TMR0H	set	22
  1785  0018                     _T0CON1bits	set	24
  1786  0017                     _T0CON0bits	set	23
  1787  0003                     _STATUSbits	set	3
  1788  009B                     _ADRES	set	155
  1789  009D                     _ADCON0bits	set	157
  1790  009E                     _ADCON1bits	set	158
  1791  009F                     _ADACT	set	159
  1792  0097                     _WDTCONbits	set	151
  1793  0117                     _FVRCONbits	set	279
  1794  039A                     _CLKRCONbits	set	922
  1795  0911                     _PMD0bits	set	2321
  1796  0919                     _OSCCON1bits	set	2329
  1797  091B                     _OSCCON3bits	set	2331
  1798  091A                     _OSCCON2bits	set	2330
  1799                           
  1800                           ; #config settings
  1801  0000                     
  1802                           	psect	cinit
  1803  07F1                     start_initialization:	
  1804  07F1                     __initialization:	
  1805                           
  1806                           ; Initialize objects allocated to BANK0
  1807  07F1  3075               	movlw	low __pidataBANK0
  1808  07F2  0084               	movwf	4
  1809  07F3  3083               	movlw	(high __pidataBANK0)| (0+128)
  1810  07F4  0085               	movwf	5
  1811  07F5  3020               	movlw	low __pdataBANK0
  1812  07F6  0086               	movwf	6
  1813  07F7  3000               	movlw	high __pdataBANK0
  1814  07F8  0087               	movwf	7
  1815  07F9  300C               	movlw	12
  1816  07FA  3183  235C         	fcall	init_ram
  1817                           
  1818                           ; Clear objects allocated to BANK0
  1819  07FC  01B2               	clrf	__pbssBANK0& (0+127)
  1820  07FD                     end_of_initialization:	
  1821                           ;End of C runtime variable initialization code
  1822                           
  1823  07FD                     __end_of__initialization:	
  1824  07FD  0020               	movlb	0
  1825  07FE  3183  2B81         	ljmp	_main	;jump to C main() function
  1826                           
  1827                           	psect	bssBANK0
  1828  0032                     __pbssBANK0:	
  1829  0032                     __gb_display_initialized:	
  1830  0032                     	ds	1
  1831                           
  1832                           	psect	dataBANK0
  1833  0020                     __pdataBANK0:	
  1834  0020                     _low_speed_clock:	
  1835  0020                     	ds	6
  1836  0026                     _high_speed_uart_clock:	
  1837  0026                     	ds	6
  1838                           
  1839                           	psect	inittext
  1840  035C                     init_ram:	
  1841  035C  00FE               	movwf	126
  1842  035D                     initloop:	
  1843  035D  0012               	moviw fsr0++
  1844  035E  001E               	movwi fsr1++
  1845  035F  0BFE               	decfsz	126,f
  1846  0360  2B5D               	goto	initloop
  1847  0361  3400               	retlw	0
  1848                           
  1849                           	psect	cstackCOMMON
  1850  0070                     __pcstackCOMMON:	
  1851  0070                     ?_wait_for_startup_clock_ready:	
  1852  0070                     ??_wait_for_startup_clock_ready:	
  1853                           ; 1 bytes @ 0x0
  1854                           
  1855  0070                     ?_pin_mode:	
  1856                           ; 1 bytes @ 0x0
  1857                           
  1858  0070                     ?_write_pin:	
  1859                           ; 1 bytes @ 0x0
  1860                           
  1861  0070                     ?_watchdog_initialize:	
  1862                           ; 1 bytes @ 0x0
  1863                           
  1864  0070                     ??_watchdog_initialize:	
  1865                           ; 1 bytes @ 0x0
  1866                           
  1867  0070                     ?_watchdog_clear:	
  1868                           ; 1 bytes @ 0x0
  1869                           
  1870  0070                     ??_watchdog_clear:	
  1871                           ; 1 bytes @ 0x0
  1872                           
  1873  0070                     ?_initialize:	
  1874                           ; 1 bytes @ 0x0
  1875                           
  1876  0070                     ?_main:	
  1877                           ; 1 bytes @ 0x0
  1878                           
  1879  0070                     pin_mode@pin:	
  1880                           ; 1 bytes @ 0x0
  1881                           
  1882  0070                     write_pin@pin:	
  1883                           ; 2 bytes @ 0x0
  1884                           
  1885                           
  1886                           ; 2 bytes @ 0x0
  1887  0070                     	ds	2
  1888  0072                     pin_mode@mode:	
  1889  0072                     write_pin@state:	
  1890                           ; 1 bytes @ 0x2
  1891                           
  1892                           
  1893                           ; 1 bytes @ 0x2
  1894  0072                     	ds	1
  1895  0073                     ??_pin_mode:	
  1896  0073                     ??_write_pin:	
  1897                           ; 1 bytes @ 0x3
  1898                           
  1899                           
  1900                           ; 1 bytes @ 0x3
  1901  0073                     	ds	4
  1902  0077                     pin_mode@base_pointer:	
  1903  0077                     write_pin@base_pointer:	
  1904                           ; 2 bytes @ 0x7
  1905                           
  1906                           
  1907                           ; 2 bytes @ 0x7
  1908  0077                     	ds	2
  1909  0079                     pin_mode@pin_bit_position:	
  1910  0079                     write_pin@pin_bit_position:	
  1911                           ; 1 bytes @ 0x9
  1912                           
  1913                           
  1914                           ; 1 bytes @ 0x9
  1915  0079                     	ds	1
  1916  007A                     ?__switch_led:	
  1917  007A                     __switch_led@state:	
  1918                           ; 1 bytes @ 0xA
  1919                           
  1920                           
  1921                           ; 1 bytes @ 0xA
  1922  007A                     	ds	1
  1923  007B                     ??__switch_led:	
  1924                           
  1925                           ; 1 bytes @ 0xB
  1926  007B                     	ds	2
  1927  007D                     __switch_led@led:	
  1928                           
  1929                           ; 1 bytes @ 0xD
  1930  007D                     	ds	1
  1931  007E                     ??_initialize:	
  1932  007E                     ??_main:	
  1933                           ; 1 bytes @ 0xE
  1934                           
  1935                           
  1936                           	psect	cstackBANK0
  1937  002C                     __pcstackBANK0:	
  1938                           ; 1 bytes @ 0xE
  1939                           
  1940  002C                     ?_led_off:	
  1941  002C                     led_off@led:	
  1942                           ; 1 bytes @ 0x0
  1943                           
  1944                           
  1945                           ; 1 bytes @ 0x0
  1946  002C                     	ds	1
  1947  002D                     ??_led_off:	
  1948                           
  1949                           ; 1 bytes @ 0x1
  1950  002D                     	ds	1
  1951  002E                     led_off@state:	
  1952                           
  1953                           ; 1 bytes @ 0x2
  1954  002E                     	ds	1
  1955  002F                     ?_pattern_scroll_out:	
  1956  002F                     ?_pattern_scroll_in:	
  1957                           ; 1 bytes @ 0x3
  1958                           
  1959  002F                     pattern_scroll_out@count:	
  1960                           ; 1 bytes @ 0x3
  1961                           
  1962  002F                     pattern_scroll_in@count:	
  1963                           ; 1 bytes @ 0x3
  1964                           
  1965                           
  1966                           ; 1 bytes @ 0x3
  1967  002F                     	ds	1
  1968  0030                     ??_pattern_scroll_out:	
  1969  0030                     ??_pattern_scroll_in:	
  1970                           ; 1 bytes @ 0x4
  1971                           
  1972                           
  1973                           ; 1 bytes @ 0x4
  1974  0030                     	ds	1
  1975  0031                     pattern_scroll_out@i:	
  1976  0031                     pattern_scroll_in@i:	
  1977                           ; 1 bytes @ 0x5
  1978                           
  1979                           
  1980                           ; 1 bytes @ 0x5
  1981  0031                     	ds	1
  1982                           
  1983                           	psect	maintext
  1984  0381                     __pmaintext:	
  1985 ;;
  1986 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1987 ;;
  1988 ;; *************** function _main *****************
  1989 ;; Defined at:
  1990 ;;		line 29 in file "main.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : B1F/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2008 ;;Total ram usage:        0 bytes
  2009 ;; Hardware stack levels required when called:    4
  2010 ;; This function calls:
  2011 ;;		_initialize
  2012 ;;		_pattern_scroll_in
  2013 ;;		_pattern_scroll_out
  2014 ;;		_wait_for_startup_clock_ready
  2015 ;;		_watchdog_clear
  2016 ;;		_watchdog_initialize
  2017 ;; This function is called by:
  2018 ;;		Startup code after reset
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _main
  2024  0381                     _main:	
  2025                           
  2026                           ;main.c: 31:     oscillator.wait_for_startup_clock_ready();
  2027                           
  2028                           ;incstack = 0
  2029                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2030  0381  3028               	movlw	low ((_oscillator+2)| (0+32768))
  2031  0382  0084               	movwf	4
  2032  0383  3088               	movlw	high ((_oscillator+2)| (0+32768))
  2033  0384  0085               	movwf	5
  2034  0385  3F01               	moviw [1]fsr0
  2035  0386  008A               	movwf	10
  2036  0387  3F00               	moviw [0]fsr0
  2037  0388  000A               	callw
  2038  0389  3183               	pagesel	$
  2039                           
  2040                           ;main.c: 32:     watchdog.initialize();
  2041  038A  30B2               	movlw	low (_watchdog| (0+32768))
  2042  038B  0084               	movwf	4
  2043  038C  3088               	movlw	high (_watchdog| (0+32768))
  2044  038D  0085               	movwf	5
  2045  038E  3F01               	moviw [1]fsr0
  2046  038F  008A               	movwf	10
  2047  0390  3F00               	moviw [0]fsr0
  2048  0391  000A               	callw
  2049  0392  3183               	pagesel	$
  2050                           
  2051                           ;main.c: 33:     display.initialize();
  2052  0393  3010               	movlw	low (_display| (0+32768))
  2053  0394  0084               	movwf	4
  2054  0395  3088               	movlw	high (_display| (0+32768))
  2055  0396  0085               	movwf	5
  2056  0397  3F01               	moviw [1]fsr0
  2057  0398  008A               	movwf	10
  2058  0399  3F00               	moviw [0]fsr0
  2059  039A  000A               	callw
  2060  039B  3183               	pagesel	$
  2061  039C                     l1565:	
  2062                           ;main.c: 34:     while(1)
  2063                           
  2064                           
  2065                           ;main.c: 35:     {;main.c: 36:         display.pattern_scroll_out(1);
  2066  039C  0020               	movlb	0	; select bank0
  2067  039D  01AF               	clrf	pattern_scroll_out@count
  2068  039E  0AAF               	incf	pattern_scroll_out@count,f
  2069  039F  3012               	movlw	low ((_display+2)| (0+32768))
  2070  03A0  0084               	movwf	4
  2071  03A1  3088               	movlw	high ((_display+2)| (0+32768))
  2072  03A2  0085               	movwf	5
  2073  03A3  3F01               	moviw [1]fsr0
  2074  03A4  008A               	movwf	10
  2075  03A5  3F00               	moviw [0]fsr0
  2076  03A6  000A               	callw
  2077  03A7  3183               	pagesel	$
  2078                           
  2079                           ;main.c: 37:         _delay((unsigned long)((100)*(31000L/4000.0)));
  2080  03A8  309B               	movlw	155
  2081  03A9                     u597:	
  2082  03A9  3200               	nop2
  2083  03AA  0B89               	decfsz	9,f
  2084  03AB  2BA9               	goto	u597
  2085                           
  2086                           ;main.c: 38:         display.pattern_scroll_in(1);
  2087  03AC  0020               	movlb	0	; select bank0
  2088  03AD  01AF               	clrf	pattern_scroll_in@count
  2089  03AE  0AAF               	incf	pattern_scroll_in@count,f
  2090  03AF  3014               	movlw	low ((_display+4)| (0+32768))
  2091  03B0  0084               	movwf	4
  2092  03B1  3088               	movlw	high ((_display+4)| (0+32768))
  2093  03B2  0085               	movwf	5
  2094  03B3  3F01               	moviw [1]fsr0
  2095  03B4  008A               	movwf	10
  2096  03B5  3F00               	moviw [0]fsr0
  2097  03B6  000A               	callw
  2098  03B7  3183               	pagesel	$
  2099                           
  2100                           ;main.c: 39:     }
  2101  03B8  2B9C               	goto	l1565
  2102  03B9                     __end_of_main:	
  2103                           ;main.c: 40:         watchdog.clear();
  2104                           
  2105                           
  2106                           	psect	text1
  2107  0362                     __ptext1:	
  2108 ;; *************** function _watchdog_initialize *****************
  2109 ;; Defined at:
  2110 ;;		line 283 in file "hardware.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0, pclath, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    1
  2131 ;; This function calls:
  2132 ;;		_watchdog_clear
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _watchdog_initialize
  2140  0362                     _watchdog_initialize:	
  2141                           
  2142                           ;hardware.c: 285:     WDTCONbits.WDTPS = WDT_TIMEOUT_PERIOD_64_S;
  2143                           
  2144                           ;incstack = 0
  2145                           ; Regs used in _watchdog_initialize: [wreg+status,2+status,0+pclath+cstack]
  2146  0362  0021               	movlb	1	; select bank1
  2147  0363  0817               	movf	23,w	;volatile
  2148  0364  39C1               	andlw	-63
  2149  0365  3820               	iorlw	32
  2150  0366  0097               	movwf	23	;volatile
  2151                           
  2152                           ;hardware.c: 286:     watchdog_clear();
  2153  0367  3183  2356         	fcall	_watchdog_clear
  2154  0369  0008               	return
  2155  036A                     __end_of_watchdog_initialize:	
  2156                           
  2157                           	psect	text2
  2158  0356                     __ptext2:	
  2159 ;; *************** function _watchdog_clear *****************
  2160 ;; Defined at:
  2161 ;;		line 289 in file "hardware.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;		None
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;		None
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      void 
  2168 ;; Registers used:
  2169 ;;		None
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2179 ;;Total ram usage:        0 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_watchdog_initialize
  2185 ;;		_main
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           
  2190                           ;psect for function _watchdog_clear
  2191  0356                     _watchdog_clear:	
  2192  0356                     WDTCLR:	
  2193                           ;incstack = 0
  2194                           ; Regs used in _watchdog_clear: []
  2195                           
  2196                           
  2197                           ;# 
  2198  0356  0008               	return
  2199  0357                     __end_of_watchdog_clear:	
  2200                           
  2201                           	psect	text3
  2202  0357                     __ptext3:	
  2203 ;; *************** function _wait_for_startup_clock_ready *****************
  2204 ;; Defined at:
  2205 ;;		line 63 in file "hardware.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;		None
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;		None
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      void 
  2212 ;; Registers used:
  2213 ;;		None
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2223 ;;Total ram usage:        0 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; This function calls:
  2226 ;;		Nothing
  2227 ;; This function is called by:
  2228 ;;		_main
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           
  2233                           ;psect for function _wait_for_startup_clock_ready
  2234  0357                     _wait_for_startup_clock_ready:	
  2235  0357                     l198:	
  2236                           ;hardware.c: 65: }
  2237                           
  2238                           ;incstack = 0
  2239                           ; Regs used in _wait_for_startup_clock_ready: []
  2240                           
  2241                           
  2242                           ;hardware.c: 65: }
  2243  0357  0032               	movlb	18	; select bank18
  2244  0358  1A1B               	btfsc	27,4	;volatile
  2245  0359  0008               	return
  2246  035A  0000               	nop	;# 
  2247  035B  2B57               	goto	l198
  2248  035C                     __end_of_wait_for_startup_clock_ready:	
  2249                           
  2250                           	psect	text4
  2251  0467                     __ptext4:	
  2252 ;; *************** function _pattern_scroll_out *****************
  2253 ;; Defined at:
  2254 ;;		line 126 in file "display.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  count           1    3[BANK0 ] unsigned char 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  i               1    5[BANK0 ] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2268 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2269 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2270 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2271 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2272 ;;Total ram usage:        3 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    3
  2275 ;; This function calls:
  2276 ;;		__switch_led
  2277 ;;		_led_off
  2278 ;; This function is called by:
  2279 ;;		_main
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function _pattern_scroll_out
  2285  0467                     _pattern_scroll_out:	
  2286                           
  2287                           ;display.c: 126: static void pattern_scroll_out (uint8_t count);display.c: 127: {;displa
      +                          y.c: 128:     uint8_t i;;display.c: 130:     display.led_off(LED_ALL);
  2288                           
  2289                           ;incstack = 0
  2290                           ; Regs used in _pattern_scroll_out: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2291  0467  3005               	movlw	5
  2292  0468  0020               	movlb	0	; select bank0
  2293  0469  00B0               	movwf	??_pattern_scroll_out
  2294  046A  0830               	movf	??_pattern_scroll_out,w
  2295  046B  00AC               	movwf	led_off@led
  2296  046C  3018               	movlw	low ((_display+8)| (0+32768))
  2297  046D  0084               	movwf	4
  2298  046E  3088               	movlw	high ((_display+8)| (0+32768))
  2299  046F  0085               	movwf	5
  2300  0470  3F01               	moviw [1]fsr0
  2301  0471  008A               	movwf	10
  2302  0472  3F00               	moviw [0]fsr0
  2303  0473  000A               	callw
  2304  0474  3184               	pagesel	$
  2305                           
  2306                           ;display.c: 132:     for (i = 0; i <= count; i++)
  2307  0475  0020               	movlb	0	; select bank0
  2308  0476  01B1               	clrf	pattern_scroll_out@i
  2309  0477                     l1473:	
  2310  0477  0831               	movf	pattern_scroll_out@i,w
  2311  0478  022F               	subwf	pattern_scroll_out@count,w
  2312  0479  1C03               	btfss	3,0
  2313  047A  2C8F               	goto	l1475
  2314                           
  2315                           ;display.c: 133:     {;display.c: 134:         _switch_led(RING4, LOW);
  2316  047B  01FA               	clrf	__switch_led@state
  2317  047C  3004               	movlw	4
  2318  047D  3186  269E  3184   	fcall	__switch_led
  2319                           
  2320                           ;display.c: 135:             _delay((unsigned long)((50)*(31000L/4000.0)));
  2321  0480  3081               	movlw	129
  2322  0481                     u607:	
  2323  0481  0B89               	decfsz	9,f
  2324  0482  2C81               	goto	u607
  2325                           
  2326                           ;display.c: 136:         _switch_led(RING4, HIGH);
  2327  0483  01FA               	clrf	__switch_led@state
  2328  0484  0AFA               	incf	__switch_led@state,f
  2329  0485  3004               	movlw	4
  2330  0486  3186  269E  3184   	fcall	__switch_led
  2331                           
  2332                           ;display.c: 137:     }
  2333  0489  3001               	movlw	1
  2334  048A  0020               	movlb	0	; select bank0
  2335  048B  00B0               	movwf	??_pattern_scroll_out
  2336  048C  0830               	movf	??_pattern_scroll_out,w
  2337  048D  07B1               	addwf	pattern_scroll_out@i,f
  2338  048E  2C77               	goto	l1473
  2339  048F                     l1475:	
  2340                           
  2341                           ;display.c: 138:     for (i = 0; i <= count; i++)
  2342  048F  01B1               	clrf	pattern_scroll_out@i
  2343  0490                     l1485:	
  2344  0490  0831               	movf	pattern_scroll_out@i,w
  2345  0491  022F               	subwf	pattern_scroll_out@count,w
  2346  0492  1C03               	btfss	3,0
  2347  0493  2CA8               	goto	l1487
  2348                           
  2349                           ;display.c: 139:     {;display.c: 140:         _switch_led(RING3, LOW);
  2350  0494  01FA               	clrf	__switch_led@state
  2351  0495  3003               	movlw	3
  2352  0496  3186  269E  3184   	fcall	__switch_led
  2353                           
  2354                           ;display.c: 141:             _delay((unsigned long)((50)*(31000L/4000.0)));
  2355  0499  3081               	movlw	129
  2356  049A                     u617:	
  2357  049A  0B89               	decfsz	9,f
  2358  049B  2C9A               	goto	u617
  2359                           
  2360                           ;display.c: 142:         _switch_led(RING3, HIGH);
  2361  049C  01FA               	clrf	__switch_led@state
  2362  049D  0AFA               	incf	__switch_led@state,f
  2363  049E  3003               	movlw	3
  2364  049F  3186  269E  3184   	fcall	__switch_led
  2365                           
  2366                           ;display.c: 143:     }
  2367  04A2  3001               	movlw	1
  2368  04A3  0020               	movlb	0	; select bank0
  2369  04A4  00B0               	movwf	??_pattern_scroll_out
  2370  04A5  0830               	movf	??_pattern_scroll_out,w
  2371  04A6  07B1               	addwf	pattern_scroll_out@i,f
  2372  04A7  2C90               	goto	l1485
  2373  04A8                     l1487:	
  2374                           
  2375                           ;display.c: 144:     for (i = 0; i <= count; i++)
  2376  04A8  01B1               	clrf	pattern_scroll_out@i
  2377  04A9                     l1497:	
  2378  04A9  0831               	movf	pattern_scroll_out@i,w
  2379  04AA  022F               	subwf	pattern_scroll_out@count,w
  2380  04AB  1C03               	btfss	3,0
  2381  04AC  2CC1               	goto	l1499
  2382                           
  2383                           ;display.c: 145:     {;display.c: 146:         _switch_led(RING2, LOW);
  2384  04AD  01FA               	clrf	__switch_led@state
  2385  04AE  3002               	movlw	2
  2386  04AF  3186  269E  3184   	fcall	__switch_led
  2387                           
  2388                           ;display.c: 147:             _delay((unsigned long)((50)*(31000L/4000.0)));
  2389  04B2  3081               	movlw	129
  2390  04B3                     u627:	
  2391  04B3  0B89               	decfsz	9,f
  2392  04B4  2CB3               	goto	u627
  2393                           
  2394                           ;display.c: 148:         _switch_led(RING2, HIGH);
  2395  04B5  01FA               	clrf	__switch_led@state
  2396  04B6  0AFA               	incf	__switch_led@state,f
  2397  04B7  3002               	movlw	2
  2398  04B8  3186  269E  3184   	fcall	__switch_led
  2399                           
  2400                           ;display.c: 149:     }
  2401  04BB  3001               	movlw	1
  2402  04BC  0020               	movlb	0	; select bank0
  2403  04BD  00B0               	movwf	??_pattern_scroll_out
  2404  04BE  0830               	movf	??_pattern_scroll_out,w
  2405  04BF  07B1               	addwf	pattern_scroll_out@i,f
  2406  04C0  2CA9               	goto	l1497
  2407  04C1                     l1499:	
  2408                           
  2409                           ;display.c: 150:     for (i = 0; i <= count; i++)
  2410  04C1  01B1               	clrf	pattern_scroll_out@i
  2411  04C2                     l1509:	
  2412  04C2  0831               	movf	pattern_scroll_out@i,w
  2413  04C3  022F               	subwf	pattern_scroll_out@count,w
  2414  04C4  1C03               	btfss	3,0
  2415  04C5  0008               	return
  2416                           
  2417                           ;display.c: 151:     {;display.c: 152:         _switch_led(RING1, LOW);
  2418  04C6  01FA               	clrf	__switch_led@state
  2419  04C7  3001               	movlw	1
  2420  04C8  3186  269E  3184   	fcall	__switch_led
  2421                           
  2422                           ;display.c: 153:             _delay((unsigned long)((50)*(31000L/4000.0)));
  2423  04CB  3081               	movlw	129
  2424  04CC                     u637:	
  2425  04CC  0B89               	decfsz	9,f
  2426  04CD  2CCC               	goto	u637
  2427                           
  2428                           ;display.c: 154:         _switch_led(RING1, HIGH);
  2429  04CE  01FA               	clrf	__switch_led@state
  2430  04CF  0AFA               	incf	__switch_led@state,f
  2431  04D0  3001               	movlw	1
  2432  04D1  3186  269E  3184   	fcall	__switch_led
  2433                           
  2434                           ;display.c: 155:     }
  2435  04D4  3001               	movlw	1
  2436  04D5  0020               	movlb	0	; select bank0
  2437  04D6  00B0               	movwf	??_pattern_scroll_out
  2438  04D7  0830               	movf	??_pattern_scroll_out,w
  2439  04D8  07B1               	addwf	pattern_scroll_out@i,f
  2440  04D9  2CC2               	goto	l1509
  2441  04DA                     __end_of_pattern_scroll_out:	
  2442                           
  2443                           	psect	text5
  2444  03F4                     __ptext5:	
  2445 ;; *************** function _pattern_scroll_in *****************
  2446 ;; Defined at:
  2447 ;;		line 158 in file "display.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  count           1    3[BANK0 ] unsigned char 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  i               1    5[BANK0 ] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2461 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2463 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2464 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2465 ;;Total ram usage:        3 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    3
  2468 ;; This function calls:
  2469 ;;		__switch_led
  2470 ;;		_led_off
  2471 ;; This function is called by:
  2472 ;;		_main
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           
  2477                           ;psect for function _pattern_scroll_in
  2478  03F4                     _pattern_scroll_in:	
  2479                           
  2480                           ;display.c: 158: static void pattern_scroll_in (uint8_t count);display.c: 159: {;display
      +                          .c: 160:     uint8_t i;;display.c: 162:     display.led_off(LED_ALL);
  2481                           
  2482                           ;incstack = 0
  2483                           ; Regs used in _pattern_scroll_in: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2484  03F4  3005               	movlw	5
  2485  03F5  0020               	movlb	0	; select bank0
  2486  03F6  00B0               	movwf	??_pattern_scroll_in
  2487  03F7  0830               	movf	??_pattern_scroll_in,w
  2488  03F8  00AC               	movwf	led_off@led
  2489  03F9  3018               	movlw	low ((_display+8)| (0+32768))
  2490  03FA  0084               	movwf	4
  2491  03FB  3088               	movlw	high ((_display+8)| (0+32768))
  2492  03FC  0085               	movwf	5
  2493  03FD  3F01               	moviw [1]fsr0
  2494  03FE  008A               	movwf	10
  2495  03FF  3F00               	moviw [0]fsr0
  2496  0400  000A               	callw
  2497  0401  3183               	pagesel	$
  2498                           
  2499                           ;display.c: 164:     for (i = 0; i <= count; i++)
  2500  0402  0020               	movlb	0	; select bank0
  2501  0403  01B1               	clrf	pattern_scroll_in@i
  2502  0404                     l1523:	
  2503  0404  0831               	movf	pattern_scroll_in@i,w
  2504  0405  022F               	subwf	pattern_scroll_in@count,w
  2505  0406  1C03               	btfss	3,0
  2506  0407  2C1C               	goto	l1525
  2507                           
  2508                           ;display.c: 165:     {;display.c: 166:         _switch_led(RING1, LOW);
  2509  0408  01FA               	clrf	__switch_led@state
  2510  0409  3001               	movlw	1
  2511  040A  3186  269E  3183   	fcall	__switch_led
  2512                           
  2513                           ;display.c: 167:             _delay((unsigned long)((50)*(31000L/4000.0)));
  2514  040D  3081               	movlw	129
  2515  040E                     u647:	
  2516  040E  0B89               	decfsz	9,f
  2517  040F  2C0E               	goto	u647
  2518                           
  2519                           ;display.c: 168:         _switch_led(RING1, HIGH);
  2520  0410  01FA               	clrf	__switch_led@state
  2521  0411  0AFA               	incf	__switch_led@state,f
  2522  0412  3001               	movlw	1
  2523  0413  3186  269E  3183   	fcall	__switch_led
  2524                           
  2525                           ;display.c: 169:     }
  2526  0416  3001               	movlw	1
  2527  0417  0020               	movlb	0	; select bank0
  2528  0418  00B0               	movwf	??_pattern_scroll_in
  2529  0419  0830               	movf	??_pattern_scroll_in,w
  2530  041A  07B1               	addwf	pattern_scroll_in@i,f
  2531  041B  2C04               	goto	l1523
  2532  041C                     l1525:	
  2533                           
  2534                           ;display.c: 170:     for (i = 0; i <= count; i++)
  2535  041C  01B1               	clrf	pattern_scroll_in@i
  2536  041D                     l1535:	
  2537  041D  0831               	movf	pattern_scroll_in@i,w
  2538  041E  022F               	subwf	pattern_scroll_in@count,w
  2539  041F  1C03               	btfss	3,0
  2540  0420  2C35               	goto	l1537
  2541                           
  2542                           ;display.c: 171:     {;display.c: 172:         _switch_led(RING2, LOW);
  2543  0421  01FA               	clrf	__switch_led@state
  2544  0422  3002               	movlw	2
  2545  0423  3186  269E  3183   	fcall	__switch_led
  2546                           
  2547                           ;display.c: 173:             _delay((unsigned long)((50)*(31000L/4000.0)));
  2548  0426  3081               	movlw	129
  2549  0427                     u657:	
  2550  0427  0B89               	decfsz	9,f
  2551  0428  2C27               	goto	u657
  2552                           
  2553                           ;display.c: 174:         _switch_led(RING2, HIGH);
  2554  0429  01FA               	clrf	__switch_led@state
  2555  042A  0AFA               	incf	__switch_led@state,f
  2556  042B  3002               	movlw	2
  2557  042C  3186  269E  3183   	fcall	__switch_led
  2558                           
  2559                           ;display.c: 175:     }
  2560  042F  3001               	movlw	1
  2561  0430  0020               	movlb	0	; select bank0
  2562  0431  00B0               	movwf	??_pattern_scroll_in
  2563  0432  0830               	movf	??_pattern_scroll_in,w
  2564  0433  07B1               	addwf	pattern_scroll_in@i,f
  2565  0434  2C1D               	goto	l1535
  2566  0435                     l1537:	
  2567                           
  2568                           ;display.c: 176:     for (i = 0; i <= count; i++)
  2569  0435  01B1               	clrf	pattern_scroll_in@i
  2570  0436                     l1547:	
  2571  0436  0831               	movf	pattern_scroll_in@i,w
  2572  0437  022F               	subwf	pattern_scroll_in@count,w
  2573  0438  1C03               	btfss	3,0
  2574  0439  2C4E               	goto	l1549
  2575                           
  2576                           ;display.c: 177:     {;display.c: 178:         _switch_led(RING3, LOW);
  2577  043A  01FA               	clrf	__switch_led@state
  2578  043B  3003               	movlw	3
  2579  043C  3186  269E  3183   	fcall	__switch_led
  2580                           
  2581                           ;display.c: 179:             _delay((unsigned long)((50)*(31000L/4000.0)));
  2582  043F  3081               	movlw	129
  2583  0440                     u667:	
  2584  0440  0B89               	decfsz	9,f
  2585  0441  2C40               	goto	u667
  2586                           
  2587                           ;display.c: 180:         _switch_led(RING3, HIGH);
  2588  0442  01FA               	clrf	__switch_led@state
  2589  0443  0AFA               	incf	__switch_led@state,f
  2590  0444  3003               	movlw	3
  2591  0445  3186  269E  3183   	fcall	__switch_led
  2592                           
  2593                           ;display.c: 181:     }
  2594  0448  3001               	movlw	1
  2595  0449  0020               	movlb	0	; select bank0
  2596  044A  00B0               	movwf	??_pattern_scroll_in
  2597  044B  0830               	movf	??_pattern_scroll_in,w
  2598  044C  07B1               	addwf	pattern_scroll_in@i,f
  2599  044D  2C36               	goto	l1547
  2600  044E                     l1549:	
  2601                           
  2602                           ;display.c: 182:     for (i = 0; i <= count; i++)
  2603  044E  01B1               	clrf	pattern_scroll_in@i
  2604  044F                     l1559:	
  2605  044F  0831               	movf	pattern_scroll_in@i,w
  2606  0450  022F               	subwf	pattern_scroll_in@count,w
  2607  0451  1C03               	btfss	3,0
  2608  0452  0008               	return
  2609                           
  2610                           ;display.c: 183:     {;display.c: 184:         _switch_led(RING4, LOW);
  2611  0453  01FA               	clrf	__switch_led@state
  2612  0454  3004               	movlw	4
  2613  0455  3186  269E  3183   	fcall	__switch_led
  2614                           
  2615                           ;display.c: 185:             _delay((unsigned long)((50)*(31000L/4000.0)));
  2616  0458  3081               	movlw	129
  2617  0459                     u677:	
  2618  0459  0B89               	decfsz	9,f
  2619  045A  2C59               	goto	u677
  2620                           
  2621                           ;display.c: 186:         _switch_led(RING4, HIGH);
  2622  045B  01FA               	clrf	__switch_led@state
  2623  045C  0AFA               	incf	__switch_led@state,f
  2624  045D  3004               	movlw	4
  2625  045E  3186  269E  3183   	fcall	__switch_led
  2626                           
  2627                           ;display.c: 187:     }
  2628  0461  3001               	movlw	1
  2629  0462  0020               	movlb	0	; select bank0
  2630  0463  00B0               	movwf	??_pattern_scroll_in
  2631  0464  0830               	movf	??_pattern_scroll_in,w
  2632  0465  07B1               	addwf	pattern_scroll_in@i,f
  2633  0466  2C4F               	goto	l1559
  2634  0467                     __end_of_pattern_scroll_in:	
  2635                           
  2636                           	psect	text6
  2637  036A                     __ptext6:	
  2638 ;; *************** function _led_off *****************
  2639 ;; Defined at:
  2640 ;;		line 72 in file "display.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  led             1    0[BANK0 ] const enum E24
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  state           1    2[BANK0 ] enum E52
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2654 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2655 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2656 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2657 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2658 ;;Total ram usage:        3 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    2
  2661 ;; This function calls:
  2662 ;;		__switch_led
  2663 ;; This function is called by:
  2664 ;;		_pattern_scroll_out
  2665 ;;		_pattern_scroll_in
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           
  2670                           ;psect for function _led_off
  2671  036A                     _led_off:	
  2672                           
  2673                           ;display.c: 72: static void led_off (led_t led);display.c: 73: {;display.c: 74:     bool
      +                          ean_state_t state = HIGH;
  2674                           
  2675                           ;incstack = 0
  2676                           ; Regs used in _led_off: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2677  036A  0020               	movlb	0	; select bank0
  2678  036B  01AE               	clrf	led_off@state
  2679  036C  0AAE               	incf	led_off@state,f
  2680                           
  2681                           ;display.c: 76:     _switch_led(led, state);
  2682  036D  082E               	movf	led_off@state,w
  2683  036E  00AD               	movwf	??_led_off
  2684  036F  082D               	movf	??_led_off,w
  2685  0370  00FA               	movwf	__switch_led@state
  2686  0371  082C               	movf	led_off@led,w
  2687  0372  3186  269E         	fcall	__switch_led
  2688  0374  0008               	return
  2689  0375                     __end_of_led_off:	
  2690                           
  2691                           	psect	text7
  2692  04DA                     __ptext7:	
  2693 ;; *************** function _initialize *****************
  2694 ;; Defined at:
  2695 ;;		line 38 in file "display.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;		None
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2713 ;;Total ram usage:        0 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    2
  2716 ;; This function calls:
  2717 ;;		__switch_led
  2718 ;;		_pin_mode
  2719 ;; This function is called by:
  2720 ;;		_main
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           
  2725                           ;psect for function _initialize
  2726  04DA                     _initialize:	
  2727                           
  2728                           ;display.c: 40:     if (!_gb_display_initialized)
  2729                           
  2730                           ;incstack = 0
  2731                           ; Regs used in _initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2732  04DA  0020               	movlb	0	; select bank0
  2733  04DB  0832               	movf	__gb_display_initialized,w
  2734  04DC  1D03               	btfss	3,2
  2735  04DD  0008               	return
  2736                           
  2737                           ;display.c: 41:     {;display.c: 43:         gpio.mode(&led1, DIGITAL_OUTPUT_PUSH_PULL);
  2738  04DE  30A5               	movlw	low (_led1| (0+32768))
  2739  04DF  00F0               	movwf	pin_mode@pin
  2740  04E0  3088               	movlw	high (_led1| (0+32768))
  2741  04E1  00F1               	movwf	pin_mode@pin+1
  2742  04E2  01F2               	clrf	pin_mode@mode
  2743  04E3  3000               	movlw	low (_gpio| (0+32768))
  2744  04E4  0084               	movwf	4
  2745  04E5  3088               	movlw	high (_gpio| (0+32768))
  2746  04E6  0085               	movwf	5
  2747  04E7  3F01               	moviw [1]fsr0
  2748  04E8  008A               	movwf	10
  2749  04E9  3F00               	moviw [0]fsr0
  2750  04EA  000A               	callw
  2751  04EB  3184               	pagesel	$
  2752                           
  2753                           ;display.c: 44:         gpio.mode(&led3, DIGITAL_OUTPUT_PUSH_PULL);
  2754  04EC  309E               	movlw	low (_led3| (0+32768))
  2755  04ED  00F0               	movwf	pin_mode@pin
  2756  04EE  3088               	movlw	high (_led3| (0+32768))
  2757  04EF  00F1               	movwf	pin_mode@pin+1
  2758  04F0  01F2               	clrf	pin_mode@mode
  2759  04F1  3000               	movlw	low (_gpio| (0+32768))
  2760  04F2  0084               	movwf	4
  2761  04F3  3088               	movlw	high (_gpio| (0+32768))
  2762  04F4  0085               	movwf	5
  2763  04F5  3F01               	moviw [1]fsr0
  2764  04F6  008A               	movwf	10
  2765  04F7  3F00               	moviw [0]fsr0
  2766  04F8  000A               	callw
  2767  04F9  3184               	pagesel	$
  2768                           
  2769                           ;display.c: 45:         gpio.mode(&led5, DIGITAL_OUTPUT_PUSH_PULL);
  2770  04FA  3097               	movlw	low (_led5| (0+32768))
  2771  04FB  00F0               	movwf	pin_mode@pin
  2772  04FC  3088               	movlw	high (_led5| (0+32768))
  2773  04FD  00F1               	movwf	pin_mode@pin+1
  2774  04FE  01F2               	clrf	pin_mode@mode
  2775  04FF  3000               	movlw	low (_gpio| (0+32768))
  2776  0500  0084               	movwf	4
  2777  0501  3088               	movlw	high (_gpio| (0+32768))
  2778  0502  0085               	movwf	5
  2779  0503  3F01               	moviw [1]fsr0
  2780  0504  008A               	movwf	10
  2781  0505  3F00               	moviw [0]fsr0
  2782  0506  000A               	callw
  2783  0507  3184               	pagesel	$
  2784                           
  2785                           ;display.c: 46:         gpio.mode(&led7, DIGITAL_OUTPUT_PUSH_PULL);
  2786  0508  3090               	movlw	low (_led7| (0+32768))
  2787  0509  00F0               	movwf	pin_mode@pin
  2788  050A  3088               	movlw	high (_led7| (0+32768))
  2789  050B  00F1               	movwf	pin_mode@pin+1
  2790  050C  01F2               	clrf	pin_mode@mode
  2791  050D  3000               	movlw	low (_gpio| (0+32768))
  2792  050E  0084               	movwf	4
  2793  050F  3088               	movlw	high (_gpio| (0+32768))
  2794  0510  0085               	movwf	5
  2795  0511  3F01               	moviw [1]fsr0
  2796  0512  008A               	movwf	10
  2797  0513  3F00               	moviw [0]fsr0
  2798  0514  000A               	callw
  2799  0515  3184               	pagesel	$
  2800                           
  2801                           ;display.c: 48:         gpio.mode(&led8, DIGITAL_OUTPUT_PUSH_PULL);
  2802  0516  3089               	movlw	low (_led8| (0+32768))
  2803  0517  00F0               	movwf	pin_mode@pin
  2804  0518  3088               	movlw	high (_led8| (0+32768))
  2805  0519  00F1               	movwf	pin_mode@pin+1
  2806  051A  01F2               	clrf	pin_mode@mode
  2807  051B  3000               	movlw	low (_gpio| (0+32768))
  2808  051C  0084               	movwf	4
  2809  051D  3088               	movlw	high (_gpio| (0+32768))
  2810  051E  0085               	movwf	5
  2811  051F  3F01               	moviw [1]fsr0
  2812  0520  008A               	movwf	10
  2813  0521  3F00               	moviw [0]fsr0
  2814  0522  000A               	callw
  2815  0523  3184               	pagesel	$
  2816                           
  2817                           ;display.c: 49:         gpio.mode(&led11, DIGITAL_OUTPUT_PUSH_PULL);
  2818  0524  3082               	movlw	low (_led11| (0+32768))
  2819  0525  00F0               	movwf	pin_mode@pin
  2820  0526  3088               	movlw	high (_led11| (0+32768))
  2821  0527  00F1               	movwf	pin_mode@pin+1
  2822  0528  01F2               	clrf	pin_mode@mode
  2823  0529  3000               	movlw	low (_gpio| (0+32768))
  2824  052A  0084               	movwf	4
  2825  052B  3088               	movlw	high (_gpio| (0+32768))
  2826  052C  0085               	movwf	5
  2827  052D  3F01               	moviw [1]fsr0
  2828  052E  008A               	movwf	10
  2829  052F  3F00               	moviw [0]fsr0
  2830  0530  000A               	callw
  2831  0531  3184               	pagesel	$
  2832                           
  2833                           ;display.c: 51:         gpio.mode(&led13, DIGITAL_OUTPUT_PUSH_PULL);
  2834  0532  307B               	movlw	low (_led13| (0+32768))
  2835  0533  00F0               	movwf	pin_mode@pin
  2836  0534  3088               	movlw	high (_led13| (0+32768))
  2837  0535  00F1               	movwf	pin_mode@pin+1
  2838  0536  01F2               	clrf	pin_mode@mode
  2839  0537  3000               	movlw	low (_gpio| (0+32768))
  2840  0538  0084               	movwf	4
  2841  0539  3088               	movlw	high (_gpio| (0+32768))
  2842  053A  0085               	movwf	5
  2843  053B  3F01               	moviw [1]fsr0
  2844  053C  008A               	movwf	10
  2845  053D  3F00               	moviw [0]fsr0
  2846  053E  000A               	callw
  2847  053F  3184               	pagesel	$
  2848                           
  2849                           ;display.c: 52:         gpio.mode(&led15, DIGITAL_OUTPUT_PUSH_PULL);
  2850  0540  3074               	movlw	low (_led15| (0+32768))
  2851  0541  00F0               	movwf	pin_mode@pin
  2852  0542  3088               	movlw	high (_led15| (0+32768))
  2853  0543  00F1               	movwf	pin_mode@pin+1
  2854  0544  01F2               	clrf	pin_mode@mode
  2855  0545  3000               	movlw	low (_gpio| (0+32768))
  2856  0546  0084               	movwf	4
  2857  0547  3088               	movlw	high (_gpio| (0+32768))
  2858  0548  0085               	movwf	5
  2859  0549  3F01               	moviw [1]fsr0
  2860  054A  008A               	movwf	10
  2861  054B  3F00               	moviw [0]fsr0
  2862  054C  000A               	callw
  2863  054D  3184               	pagesel	$
  2864                           
  2865                           ;display.c: 54:         gpio.mode(&led18, DIGITAL_OUTPUT_PUSH_PULL);
  2866  054E  306D               	movlw	low (_led18| (0+32768))
  2867  054F  00F0               	movwf	pin_mode@pin
  2868  0550  3088               	movlw	high (_led18| (0+32768))
  2869  0551  00F1               	movwf	pin_mode@pin+1
  2870  0552  01F2               	clrf	pin_mode@mode
  2871  0553  3000               	movlw	low (_gpio| (0+32768))
  2872  0554  0084               	movwf	4
  2873  0555  3088               	movlw	high (_gpio| (0+32768))
  2874  0556  0085               	movwf	5
  2875  0557  3F01               	moviw [1]fsr0
  2876  0558  008A               	movwf	10
  2877  0559  3F00               	moviw [0]fsr0
  2878  055A  000A               	callw
  2879  055B  3184               	pagesel	$
  2880                           
  2881                           ;display.c: 56:         _switch_led(RING1, LOW);
  2882  055C  01FA               	clrf	__switch_led@state
  2883  055D  3001               	movlw	1
  2884  055E  3186  269E  3184   	fcall	__switch_led
  2885                           
  2886                           ;display.c: 57:         _switch_led(RING2, LOW);
  2887  0561  01FA               	clrf	__switch_led@state
  2888  0562  3002               	movlw	2
  2889  0563  3186  269E  3184   	fcall	__switch_led
  2890                           
  2891                           ;display.c: 58:         _switch_led(RING3, LOW);
  2892  0566  01FA               	clrf	__switch_led@state
  2893  0567  3003               	movlw	3
  2894  0568  3186  269E  3184   	fcall	__switch_led
  2895                           
  2896                           ;display.c: 59:         _switch_led(RING4, LOW);
  2897  056B  01FA               	clrf	__switch_led@state
  2898  056C  3004               	movlw	4
  2899  056D  3186  269E         	fcall	__switch_led
  2900                           
  2901                           ;display.c: 61:         _gb_display_initialized = TRUE;
  2902  056F  0020               	movlb	0	; select bank0
  2903  0570  01B2               	clrf	__gb_display_initialized
  2904  0571  0AB2               	incf	__gb_display_initialized,f
  2905  0572  0008               	return
  2906  0573                     __end_of_initialize:	
  2907                           ;display.c: 62:     }
  2908                           
  2909                           
  2910                           	psect	text8
  2911  0573                     __ptext8:	
  2912 ;; *************** function _pin_mode *****************
  2913 ;; Defined at:
  2914 ;;		line 127 in file "hardware.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  pin             2    0[COMMON] PTR const struct .
  2917 ;;		 -> led18(7), led15(7), led13(7), led11(7), 
  2918 ;;		 -> led8(7), led7(7), led5(7), led3(7), 
  2919 ;;		 -> led1(7), 
  2920 ;;  mode            1    2[COMMON] enum E6418
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  base_pointer    2    7[COMMON] PTR volatile unsigned ch
  2923 ;;		 -> RAM(4096), RAM(4096), 
  2924 ;;  pin_bit_posi    1    9[COMMON] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2934 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2935 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2936 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2937 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2938 ;;Total ram usage:       10 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_set_clock_to_pin
  2944 ;;		_initialize
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           
  2949                           ;psect for function _pin_mode
  2950  0573                     _pin_mode:	
  2951                           
  2952                           ;hardware.c: 127: void pin_mode (pin_t *pin, gpio_mode_t mode);hardware.c: 128: {;hardwa
      +                          re.c: 129:     volatile uint8_t* base_pointer = pin->port;
  2953                           
  2954                           ;incstack = 0
  2955                           ; Regs used in _pin_mode: [wreg-fsr1h+status,2+status,0+pclath]
  2956  0573  0870               	movf	pin_mode@pin,w
  2957  0574  0084               	movwf	4
  2958  0575  0871               	movf	pin_mode@pin+1,w
  2959  0576  0085               	movwf	5
  2960  0577  3F00               	moviw [0]fsr0
  2961  0578  00F7               	movwf	pin_mode@base_pointer
  2962  0579  3F01               	moviw [1]fsr0
  2963  057A  00F8               	movwf	pin_mode@base_pointer+1
  2964                           
  2965                           ;hardware.c: 130:     uint8_t pin_bit_position = HIGH << pin->pin_num;
  2966  057B  3001               	movlw	1
  2967  057C  00F3               	movwf	??_pin_mode
  2968  057D  0871               	movf	pin_mode@pin+1,w
  2969  057E  00F5               	movwf	??_pin_mode+2
  2970  057F  0870               	movf	pin_mode@pin,w
  2971  0580  00F4               	movwf	??_pin_mode+1
  2972  0581  3002               	movlw	2
  2973  0582  0774               	addwf	??_pin_mode+1,w
  2974  0583  0084               	movwf	4
  2975  0584  0875               	movf	??_pin_mode+2,w
  2976  0585  1803               	skipnc
  2977  0586  0A75               	incf	??_pin_mode+2,w
  2978  0587  0085               	movwf	5
  2979  0588  0800               	movf	0,w	;code access
  2980  0589  0A89               	incf	9,f
  2981  058A  2D8C               	goto	u434
  2982  058B                     u435:	
  2983  058B  35F3               	lslf	??_pin_mode,f
  2984  058C                     u434:	
  2985  058C  0B89               	decfsz	9,f
  2986  058D  2D8B               	goto	u435
  2987  058E  0873               	movf	??_pin_mode,w
  2988  058F  00F6               	movwf	??_pin_mode+3
  2989  0590  0876               	movf	??_pin_mode+3,w
  2990  0591  00F9               	movwf	pin_mode@pin_bit_position
  2991                           
  2992                           ;hardware.c: 132:     if (mode == DIGITAL_INPUT_NO_PULL)
  2993  0592  3002               	movlw	2
  2994  0593  0672               	xorwf	pin_mode@mode,w
  2995  0594  1D03               	btfss	3,2
  2996  0595  2DBF               	goto	l1427
  2997                           
  2998                           ;hardware.c: 133:     {;hardware.c: 134:         base_pointer[0x180] &= ~(pin_bit_positi
      +                          on);
  2999  0596  0979               	comf	pin_mode@pin_bit_position,w
  3000  0597  00F3               	movwf	??_pin_mode
  3001  0598  0877               	movf	pin_mode@base_pointer,w
  3002  0599  3E80               	addlw	128
  3003  059A  0086               	movwf	6
  3004  059B  3001               	movlw	1
  3005  059C  3D78               	addwfc	pin_mode@base_pointer+1,w
  3006  059D  0087               	movwf	7
  3007  059E  0873               	movf	??_pin_mode,w
  3008  059F  0581               	andwf	1,f
  3009                           
  3010                           ;hardware.c: 135:         base_pointer[0x080] |= (pin_bit_position);
  3011  05A0  0879               	movf	pin_mode@pin_bit_position,w
  3012  05A1  00F3               	movwf	??_pin_mode
  3013  05A2  0877               	movf	pin_mode@base_pointer,w
  3014  05A3  3E80               	addlw	128
  3015  05A4  0086               	movwf	6
  3016  05A5  3000               	movlw	0
  3017  05A6  3D78               	addwfc	pin_mode@base_pointer+1,w
  3018  05A7  0087               	movwf	7
  3019  05A8  0873               	movf	??_pin_mode,w
  3020  05A9  0481               	iorwf	1,f
  3021                           
  3022                           ;hardware.c: 136:         base_pointer[0x200] &= ~(pin_bit_position);
  3023  05AA  0979               	comf	pin_mode@pin_bit_position,w
  3024  05AB  00F3               	movwf	??_pin_mode
  3025  05AC  0877               	movf	pin_mode@base_pointer,w
  3026  05AD  3E00               	addlw	0
  3027  05AE  0086               	movwf	6
  3028  05AF  3002               	movlw	2
  3029  05B0  3D78               	addwfc	pin_mode@base_pointer+1,w
  3030  05B1  0087               	movwf	7
  3031  05B2  0873               	movf	??_pin_mode,w
  3032  05B3  0581               	andwf	1,f
  3033                           
  3034                           ;hardware.c: 137:         base_pointer[0x280] &= ~(pin_bit_position);
  3035  05B4  0979               	comf	pin_mode@pin_bit_position,w
  3036  05B5  00F3               	movwf	??_pin_mode
  3037  05B6  0877               	movf	pin_mode@base_pointer,w
  3038  05B7  3E80               	addlw	128
  3039  05B8  0086               	movwf	6
  3040  05B9  3002               	movlw	2
  3041  05BA  3D78               	addwfc	pin_mode@base_pointer+1,w
  3042  05BB  0087               	movwf	7
  3043  05BC  0873               	movf	??_pin_mode,w
  3044  05BD  0581               	andwf	1,f
  3045                           
  3046                           ;hardware.c: 138:     }
  3047  05BE  0008               	return
  3048  05BF                     l1427:	
  3049                           ;hardware.c: 139:     else if (mode == DIGITAL_INPUT_PULL_UP)
  3050                           
  3051  05BF  3003               	movlw	3
  3052  05C0  0672               	xorwf	pin_mode@mode,w
  3053  05C1  1D03               	btfss	3,2
  3054  05C2  2DEC               	goto	l1431
  3055                           
  3056                           ;hardware.c: 140:     {;hardware.c: 141:         base_pointer[0x180] &= ~(pin_bit_positi
      +                          on);
  3057  05C3  0979               	comf	pin_mode@pin_bit_position,w
  3058  05C4  00F3               	movwf	??_pin_mode
  3059  05C5  0877               	movf	pin_mode@base_pointer,w
  3060  05C6  3E80               	addlw	128
  3061  05C7  0086               	movwf	6
  3062  05C8  3001               	movlw	1
  3063  05C9  3D78               	addwfc	pin_mode@base_pointer+1,w
  3064  05CA  0087               	movwf	7
  3065  05CB  0873               	movf	??_pin_mode,w
  3066  05CC  0581               	andwf	1,f
  3067                           
  3068                           ;hardware.c: 142:         base_pointer[0x080] |= (pin_bit_position);
  3069  05CD  0879               	movf	pin_mode@pin_bit_position,w
  3070  05CE  00F3               	movwf	??_pin_mode
  3071  05CF  0877               	movf	pin_mode@base_pointer,w
  3072  05D0  3E80               	addlw	128
  3073  05D1  0086               	movwf	6
  3074  05D2  3000               	movlw	0
  3075  05D3  3D78               	addwfc	pin_mode@base_pointer+1,w
  3076  05D4  0087               	movwf	7
  3077  05D5  0873               	movf	??_pin_mode,w
  3078  05D6  0481               	iorwf	1,f
  3079                           
  3080                           ;hardware.c: 143:         base_pointer[0x200] |= (pin_bit_position);
  3081  05D7  0879               	movf	pin_mode@pin_bit_position,w
  3082  05D8  00F3               	movwf	??_pin_mode
  3083  05D9  0877               	movf	pin_mode@base_pointer,w
  3084  05DA  3E00               	addlw	0
  3085  05DB  0086               	movwf	6
  3086  05DC  3002               	movlw	2
  3087  05DD  3D78               	addwfc	pin_mode@base_pointer+1,w
  3088  05DE  0087               	movwf	7
  3089  05DF  0873               	movf	??_pin_mode,w
  3090  05E0  0481               	iorwf	1,f
  3091                           
  3092                           ;hardware.c: 144:         base_pointer[0x280] &= ~(pin_bit_position);
  3093  05E1  0979               	comf	pin_mode@pin_bit_position,w
  3094  05E2  00F3               	movwf	??_pin_mode
  3095  05E3  0877               	movf	pin_mode@base_pointer,w
  3096  05E4  3E80               	addlw	128
  3097  05E5  0086               	movwf	6
  3098  05E6  3002               	movlw	2
  3099  05E7  3D78               	addwfc	pin_mode@base_pointer+1,w
  3100  05E8  0087               	movwf	7
  3101  05E9  0873               	movf	??_pin_mode,w
  3102  05EA  0581               	andwf	1,f
  3103                           
  3104                           ;hardware.c: 145:     }
  3105  05EB  0008               	return
  3106  05EC                     l1431:	
  3107                           ;hardware.c: 146:     else if (mode == DIGITAL_INPUT_OPEN_DRAIN)
  3108                           
  3109  05EC  3004               	movlw	4
  3110  05ED  0672               	xorwf	pin_mode@mode,w
  3111  05EE  1D03               	btfss	3,2
  3112  05EF  2E19               	goto	l1435
  3113                           
  3114                           ;hardware.c: 147:     {;hardware.c: 148:         base_pointer[0x180] &= ~(pin_bit_positi
      +                          on);
  3115  05F0  0979               	comf	pin_mode@pin_bit_position,w
  3116  05F1  00F3               	movwf	??_pin_mode
  3117  05F2  0877               	movf	pin_mode@base_pointer,w
  3118  05F3  3E80               	addlw	128
  3119  05F4  0086               	movwf	6
  3120  05F5  3001               	movlw	1
  3121  05F6  3D78               	addwfc	pin_mode@base_pointer+1,w
  3122  05F7  0087               	movwf	7
  3123  05F8  0873               	movf	??_pin_mode,w
  3124  05F9  0581               	andwf	1,f
  3125                           
  3126                           ;hardware.c: 149:         base_pointer[0x080] |= (pin_bit_position);
  3127  05FA  0879               	movf	pin_mode@pin_bit_position,w
  3128  05FB  00F3               	movwf	??_pin_mode
  3129  05FC  0877               	movf	pin_mode@base_pointer,w
  3130  05FD  3E80               	addlw	128
  3131  05FE  0086               	movwf	6
  3132  05FF  3000               	movlw	0
  3133  0600  3D78               	addwfc	pin_mode@base_pointer+1,w
  3134  0601  0087               	movwf	7
  3135  0602  0873               	movf	??_pin_mode,w
  3136  0603  0481               	iorwf	1,f
  3137                           
  3138                           ;hardware.c: 150:         base_pointer[0x200] &= ~(pin_bit_position);
  3139  0604  0979               	comf	pin_mode@pin_bit_position,w
  3140  0605  00F3               	movwf	??_pin_mode
  3141  0606  0877               	movf	pin_mode@base_pointer,w
  3142  0607  3E00               	addlw	0
  3143  0608  0086               	movwf	6
  3144  0609  3002               	movlw	2
  3145  060A  3D78               	addwfc	pin_mode@base_pointer+1,w
  3146  060B  0087               	movwf	7
  3147  060C  0873               	movf	??_pin_mode,w
  3148  060D  0581               	andwf	1,f
  3149                           
  3150                           ;hardware.c: 151:         base_pointer[0x280] |= (pin_bit_position);
  3151  060E  0879               	movf	pin_mode@pin_bit_position,w
  3152  060F  00F3               	movwf	??_pin_mode
  3153  0610  0877               	movf	pin_mode@base_pointer,w
  3154  0611  3E80               	addlw	128
  3155  0612  0086               	movwf	6
  3156  0613  3002               	movlw	2
  3157  0614  3D78               	addwfc	pin_mode@base_pointer+1,w
  3158  0615  0087               	movwf	7
  3159  0616  0873               	movf	??_pin_mode,w
  3160  0617  0481               	iorwf	1,f
  3161                           
  3162                           ;hardware.c: 152:     }
  3163  0618  0008               	return
  3164  0619                     l1435:	
  3165                           ;hardware.c: 153:     else if (mode == ANALOG_INPUT)
  3166                           
  3167  0619  3005               	movlw	5
  3168  061A  0672               	xorwf	pin_mode@mode,w
  3169  061B  1D03               	btfss	3,2
  3170  061C  2E46               	goto	l1439
  3171                           
  3172                           ;hardware.c: 154:     {;hardware.c: 155:         base_pointer[0x180] |= (pin_bit_positio
      +                          n);
  3173  061D  0879               	movf	pin_mode@pin_bit_position,w
  3174  061E  00F3               	movwf	??_pin_mode
  3175  061F  0877               	movf	pin_mode@base_pointer,w
  3176  0620  3E80               	addlw	128
  3177  0621  0086               	movwf	6
  3178  0622  3001               	movlw	1
  3179  0623  3D78               	addwfc	pin_mode@base_pointer+1,w
  3180  0624  0087               	movwf	7
  3181  0625  0873               	movf	??_pin_mode,w
  3182  0626  0481               	iorwf	1,f
  3183                           
  3184                           ;hardware.c: 156:         base_pointer[0x080] |= (pin_bit_position);
  3185  0627  0879               	movf	pin_mode@pin_bit_position,w
  3186  0628  00F3               	movwf	??_pin_mode
  3187  0629  0877               	movf	pin_mode@base_pointer,w
  3188  062A  3E80               	addlw	128
  3189  062B  0086               	movwf	6
  3190  062C  3000               	movlw	0
  3191  062D  3D78               	addwfc	pin_mode@base_pointer+1,w
  3192  062E  0087               	movwf	7
  3193  062F  0873               	movf	??_pin_mode,w
  3194  0630  0481               	iorwf	1,f
  3195                           
  3196                           ;hardware.c: 157:         base_pointer[0x200] &= ~(pin_bit_position);
  3197  0631  0979               	comf	pin_mode@pin_bit_position,w
  3198  0632  00F3               	movwf	??_pin_mode
  3199  0633  0877               	movf	pin_mode@base_pointer,w
  3200  0634  3E00               	addlw	0
  3201  0635  0086               	movwf	6
  3202  0636  3002               	movlw	2
  3203  0637  3D78               	addwfc	pin_mode@base_pointer+1,w
  3204  0638  0087               	movwf	7
  3205  0639  0873               	movf	??_pin_mode,w
  3206  063A  0581               	andwf	1,f
  3207                           
  3208                           ;hardware.c: 158:         base_pointer[0x280] &= ~(pin_bit_position);
  3209  063B  0979               	comf	pin_mode@pin_bit_position,w
  3210  063C  00F3               	movwf	??_pin_mode
  3211  063D  0877               	movf	pin_mode@base_pointer,w
  3212  063E  3E80               	addlw	128
  3213  063F  0086               	movwf	6
  3214  0640  3002               	movlw	2
  3215  0641  3D78               	addwfc	pin_mode@base_pointer+1,w
  3216  0642  0087               	movwf	7
  3217  0643  0873               	movf	??_pin_mode,w
  3218  0644  0581               	andwf	1,f
  3219                           
  3220                           ;hardware.c: 159:     }
  3221  0645  0008               	return
  3222  0646                     l1439:	
  3223                           ;hardware.c: 160:     else if (mode == DIGITAL_OUTPUT_PUSH_PULL)
  3224                           
  3225  0646  0872               	movf	pin_mode@mode,w
  3226  0647  1D03               	btfss	3,2
  3227  0648  2E72               	goto	l1443
  3228                           
  3229                           ;hardware.c: 161:     {;hardware.c: 162:         base_pointer[0x180] &= ~(pin_bit_positi
      +                          on);
  3230  0649  0979               	comf	pin_mode@pin_bit_position,w
  3231  064A  00F3               	movwf	??_pin_mode
  3232  064B  0877               	movf	pin_mode@base_pointer,w
  3233  064C  3E80               	addlw	128
  3234  064D  0086               	movwf	6
  3235  064E  3001               	movlw	1
  3236  064F  3D78               	addwfc	pin_mode@base_pointer+1,w
  3237  0650  0087               	movwf	7
  3238  0651  0873               	movf	??_pin_mode,w
  3239  0652  0581               	andwf	1,f
  3240                           
  3241                           ;hardware.c: 163:         base_pointer[0x080] &= ~(pin_bit_position);
  3242  0653  0979               	comf	pin_mode@pin_bit_position,w
  3243  0654  00F3               	movwf	??_pin_mode
  3244  0655  0877               	movf	pin_mode@base_pointer,w
  3245  0656  3E80               	addlw	128
  3246  0657  0086               	movwf	6
  3247  0658  3000               	movlw	0
  3248  0659  3D78               	addwfc	pin_mode@base_pointer+1,w
  3249  065A  0087               	movwf	7
  3250  065B  0873               	movf	??_pin_mode,w
  3251  065C  0581               	andwf	1,f
  3252                           
  3253                           ;hardware.c: 164:         base_pointer[0x200] &= ~(pin_bit_position);
  3254  065D  0979               	comf	pin_mode@pin_bit_position,w
  3255  065E  00F3               	movwf	??_pin_mode
  3256  065F  0877               	movf	pin_mode@base_pointer,w
  3257  0660  3E00               	addlw	0
  3258  0661  0086               	movwf	6
  3259  0662  3002               	movlw	2
  3260  0663  3D78               	addwfc	pin_mode@base_pointer+1,w
  3261  0664  0087               	movwf	7
  3262  0665  0873               	movf	??_pin_mode,w
  3263  0666  0581               	andwf	1,f
  3264                           
  3265                           ;hardware.c: 165:         base_pointer[0x280] &= ~(pin_bit_position);
  3266  0667  0979               	comf	pin_mode@pin_bit_position,w
  3267  0668  00F3               	movwf	??_pin_mode
  3268  0669  0877               	movf	pin_mode@base_pointer,w
  3269  066A  3E80               	addlw	128
  3270  066B  0086               	movwf	6
  3271  066C  3002               	movlw	2
  3272  066D  3D78               	addwfc	pin_mode@base_pointer+1,w
  3273  066E  0087               	movwf	7
  3274  066F  0873               	movf	??_pin_mode,w
  3275  0670  0581               	andwf	1,f
  3276                           
  3277                           ;hardware.c: 166:     }
  3278  0671  0008               	return
  3279  0672                     l1443:	
  3280                           ;hardware.c: 167:     else if (mode == DIGITAL_OUTPUT_OPEN_DRAIN)
  3281                           
  3282  0672  0372               	decf	pin_mode@mode,w
  3283  0673  1D03               	btfss	3,2
  3284  0674  0008               	return
  3285                           
  3286                           ;hardware.c: 168:     {;hardware.c: 169:         base_pointer[0x180] &= ~(pin_bit_positi
      +                          on);
  3287  0675  0979               	comf	pin_mode@pin_bit_position,w
  3288  0676  00F3               	movwf	??_pin_mode
  3289  0677  0877               	movf	pin_mode@base_pointer,w
  3290  0678  3E80               	addlw	128
  3291  0679  0086               	movwf	6
  3292  067A  3001               	movlw	1
  3293  067B  3D78               	addwfc	pin_mode@base_pointer+1,w
  3294  067C  0087               	movwf	7
  3295  067D  0873               	movf	??_pin_mode,w
  3296  067E  0581               	andwf	1,f
  3297                           
  3298                           ;hardware.c: 170:         base_pointer[0x080] &= ~(pin_bit_position);
  3299  067F  0979               	comf	pin_mode@pin_bit_position,w
  3300  0680  00F3               	movwf	??_pin_mode
  3301  0681  0877               	movf	pin_mode@base_pointer,w
  3302  0682  3E80               	addlw	128
  3303  0683  0086               	movwf	6
  3304  0684  3000               	movlw	0
  3305  0685  3D78               	addwfc	pin_mode@base_pointer+1,w
  3306  0686  0087               	movwf	7
  3307  0687  0873               	movf	??_pin_mode,w
  3308  0688  0581               	andwf	1,f
  3309                           
  3310                           ;hardware.c: 171:         base_pointer[0x200] &= ~(pin_bit_position);
  3311  0689  0979               	comf	pin_mode@pin_bit_position,w
  3312  068A  00F3               	movwf	??_pin_mode
  3313  068B  0877               	movf	pin_mode@base_pointer,w
  3314  068C  3E00               	addlw	0
  3315  068D  0086               	movwf	6
  3316  068E  3002               	movlw	2
  3317  068F  3D78               	addwfc	pin_mode@base_pointer+1,w
  3318  0690  0087               	movwf	7
  3319  0691  0873               	movf	??_pin_mode,w
  3320  0692  0581               	andwf	1,f
  3321                           
  3322                           ;hardware.c: 172:         base_pointer[0x280] |= (pin_bit_position);
  3323  0693  0879               	movf	pin_mode@pin_bit_position,w
  3324  0694  00F3               	movwf	??_pin_mode
  3325  0695  0877               	movf	pin_mode@base_pointer,w
  3326  0696  3E80               	addlw	128
  3327  0697  0086               	movwf	6
  3328  0698  3002               	movlw	2
  3329  0699  3D78               	addwfc	pin_mode@base_pointer+1,w
  3330  069A  0087               	movwf	7
  3331  069B  0873               	movf	??_pin_mode,w
  3332  069C  0481               	iorwf	1,f
  3333                           
  3334                           ;hardware.c: 173:     }
  3335  069D  0008               	return
  3336  069E                     __end_of_pin_mode:	
  3337                           
  3338                           	psect	text9
  3339  069E                     __ptext9:	
  3340 ;; *************** function __switch_led *****************
  3341 ;; Defined at:
  3342 ;;		line 88 in file "display.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  led             1    wreg     const enum E24
  3345 ;;  state           1   10[COMMON] enum E52
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  led             1   13[COMMON] const enum E24
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3357 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3358 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3359 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3360 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3361 ;;Total ram usage:        4 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    1
  3364 ;; This function calls:
  3365 ;;		_write_pin
  3366 ;; This function is called by:
  3367 ;;		_initialize
  3368 ;;		_led_off
  3369 ;;		_pattern_scroll_out
  3370 ;;		_pattern_scroll_in
  3371 ;;		_led_on
  3372 ;;		_led_flash
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           
  3377                           ;psect for function __switch_led
  3378  069E                     __switch_led:	
  3379                           
  3380                           ;incstack = 0
  3381                           ; Regs used in __switch_led: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3382                           ;__switch_led@led stored from wreg
  3383  069E  00FD               	movwf	__switch_led@led
  3384                           
  3385                           ;display.c: 88: static void _switch_led (led_t led, boolean_state_t state);display.c: 89
      +                          : {;display.c: 91:     switch (led)
  3386  069F  2FD7               	goto	l1413
  3387  06A0                     l1401:	
  3388                           ;display.c: 92:     {;display.c: 93:         case RING4:
  3389                           
  3390                           
  3391                           ;display.c: 94:             gpio.write(&led18, state);
  3392  06A0  306D               	movlw	low (_led18| (0+32768))
  3393  06A1  00F0               	movwf	write_pin@pin
  3394  06A2  3088               	movlw	high (_led18| (0+32768))
  3395  06A3  00F1               	movwf	write_pin@pin+1
  3396  06A4  087A               	movf	__switch_led@state,w
  3397  06A5  00FB               	movwf	??__switch_led
  3398  06A6  087B               	movf	??__switch_led,w
  3399  06A7  00F2               	movwf	write_pin@state
  3400  06A8  3002               	movlw	low ((_gpio+2)| (0+32768))
  3401  06A9  0084               	movwf	4
  3402  06AA  3088               	movlw	high ((_gpio+2)| (0+32768))
  3403  06AB  0085               	movwf	5
  3404  06AC  3F01               	moviw [1]fsr0
  3405  06AD  008A               	movwf	10
  3406  06AE  3F00               	moviw [0]fsr0
  3407  06AF  000A               	callw
  3408  06B0  3186               	pagesel	$
  3409                           
  3410                           ;display.c: 95:             break;
  3411  06B1  0008               	return
  3412  06B2                     l1403:	
  3413                           ;display.c: 96:         case RING3:
  3414                           
  3415                           
  3416                           ;display.c: 97:             gpio.write(&led15, state);
  3417  06B2  3074               	movlw	low (_led15| (0+32768))
  3418  06B3  00F0               	movwf	write_pin@pin
  3419  06B4  3088               	movlw	high (_led15| (0+32768))
  3420  06B5  00F1               	movwf	write_pin@pin+1
  3421  06B6  087A               	movf	__switch_led@state,w
  3422  06B7  00FB               	movwf	??__switch_led
  3423  06B8  087B               	movf	??__switch_led,w
  3424  06B9  00F2               	movwf	write_pin@state
  3425  06BA  3002               	movlw	low ((_gpio+2)| (0+32768))
  3426  06BB  0084               	movwf	4
  3427  06BC  3088               	movlw	high ((_gpio+2)| (0+32768))
  3428  06BD  0085               	movwf	5
  3429  06BE  3F01               	moviw [1]fsr0
  3430  06BF  008A               	movwf	10
  3431  06C0  3F00               	moviw [0]fsr0
  3432  06C1  000A               	callw
  3433  06C2  3186               	pagesel	$
  3434                           
  3435                           ;display.c: 98:             gpio.write(&led13, state);
  3436  06C3  307B               	movlw	low (_led13| (0+32768))
  3437  06C4  00F0               	movwf	write_pin@pin
  3438  06C5  3088               	movlw	high (_led13| (0+32768))
  3439  06C6  00F1               	movwf	write_pin@pin+1
  3440  06C7  087A               	movf	__switch_led@state,w
  3441  06C8  00FB               	movwf	??__switch_led
  3442  06C9  087B               	movf	??__switch_led,w
  3443  06CA  00F2               	movwf	write_pin@state
  3444  06CB  3002               	movlw	low ((_gpio+2)| (0+32768))
  3445  06CC  0084               	movwf	4
  3446  06CD  3088               	movlw	high ((_gpio+2)| (0+32768))
  3447  06CE  0085               	movwf	5
  3448  06CF  3F01               	moviw [1]fsr0
  3449  06D0  008A               	movwf	10
  3450  06D1  3F00               	moviw [0]fsr0
  3451  06D2  000A               	callw
  3452  06D3  3186               	pagesel	$
  3453                           
  3454                           ;display.c: 99:             break;
  3455  06D4  0008               	return
  3456  06D5                     l1405:	
  3457                           ;display.c: 100:         case RING2:
  3458                           
  3459                           
  3460                           ;display.c: 101:             gpio.write(&led11, state);
  3461  06D5  3082               	movlw	low (_led11| (0+32768))
  3462  06D6  00F0               	movwf	write_pin@pin
  3463  06D7  3088               	movlw	high (_led11| (0+32768))
  3464  06D8  00F1               	movwf	write_pin@pin+1
  3465  06D9  087A               	movf	__switch_led@state,w
  3466  06DA  00FB               	movwf	??__switch_led
  3467  06DB  087B               	movf	??__switch_led,w
  3468  06DC  00F2               	movwf	write_pin@state
  3469  06DD  3002               	movlw	low ((_gpio+2)| (0+32768))
  3470  06DE  0084               	movwf	4
  3471  06DF  3088               	movlw	high ((_gpio+2)| (0+32768))
  3472  06E0  0085               	movwf	5
  3473  06E1  3F01               	moviw [1]fsr0
  3474  06E2  008A               	movwf	10
  3475  06E3  3F00               	moviw [0]fsr0
  3476  06E4  000A               	callw
  3477  06E5  3186               	pagesel	$
  3478                           
  3479                           ;display.c: 102:             gpio.write(&led8, state);
  3480  06E6  3089               	movlw	low (_led8| (0+32768))
  3481  06E7  00F0               	movwf	write_pin@pin
  3482  06E8  3088               	movlw	high (_led8| (0+32768))
  3483  06E9  00F1               	movwf	write_pin@pin+1
  3484  06EA  087A               	movf	__switch_led@state,w
  3485  06EB  00FB               	movwf	??__switch_led
  3486  06EC  087B               	movf	??__switch_led,w
  3487  06ED  00F2               	movwf	write_pin@state
  3488  06EE  3002               	movlw	low ((_gpio+2)| (0+32768))
  3489  06EF  0084               	movwf	4
  3490  06F0  3088               	movlw	high ((_gpio+2)| (0+32768))
  3491  06F1  0085               	movwf	5
  3492  06F2  3F01               	moviw [1]fsr0
  3493  06F3  008A               	movwf	10
  3494  06F4  3F00               	moviw [0]fsr0
  3495  06F5  000A               	callw
  3496  06F6  3186               	pagesel	$
  3497                           
  3498                           ;display.c: 103:             break;
  3499  06F7  0008               	return
  3500  06F8                     l1407:	
  3501                           ;display.c: 104:         case RING1:
  3502                           
  3503                           
  3504                           ;display.c: 105:             gpio.write(&led7, state);
  3505  06F8  3090               	movlw	low (_led7| (0+32768))
  3506  06F9  00F0               	movwf	write_pin@pin
  3507  06FA  3088               	movlw	high (_led7| (0+32768))
  3508  06FB  00F1               	movwf	write_pin@pin+1
  3509  06FC  087A               	movf	__switch_led@state,w
  3510  06FD  00FB               	movwf	??__switch_led
  3511  06FE  087B               	movf	??__switch_led,w
  3512  06FF  00F2               	movwf	write_pin@state
  3513  0700  3002               	movlw	low ((_gpio+2)| (0+32768))
  3514  0701  0084               	movwf	4
  3515  0702  3088               	movlw	high ((_gpio+2)| (0+32768))
  3516  0703  0085               	movwf	5
  3517  0704  3F01               	moviw [1]fsr0
  3518  0705  008A               	movwf	10
  3519  0706  3F00               	moviw [0]fsr0
  3520  0707  000A               	callw
  3521  0708  3186               	pagesel	$
  3522                           
  3523                           ;display.c: 106:             gpio.write(&led5, state);
  3524  0709  3097               	movlw	low (_led5| (0+32768))
  3525  070A  00F0               	movwf	write_pin@pin
  3526  070B  3088               	movlw	high (_led5| (0+32768))
  3527  070C  00F1               	movwf	write_pin@pin+1
  3528  070D  087A               	movf	__switch_led@state,w
  3529  070E  00FB               	movwf	??__switch_led
  3530  070F  087B               	movf	??__switch_led,w
  3531  0710  00F2               	movwf	write_pin@state
  3532  0711  3002               	movlw	low ((_gpio+2)| (0+32768))
  3533  0712  0084               	movwf	4
  3534  0713  3088               	movlw	high ((_gpio+2)| (0+32768))
  3535  0714  0085               	movwf	5
  3536  0715  3F01               	moviw [1]fsr0
  3537  0716  008A               	movwf	10
  3538  0717  3F00               	moviw [0]fsr0
  3539  0718  000A               	callw
  3540  0719  3186               	pagesel	$
  3541                           
  3542                           ;display.c: 107:             gpio.write(&led3, state);
  3543  071A  309E               	movlw	low (_led3| (0+32768))
  3544  071B  00F0               	movwf	write_pin@pin
  3545  071C  3088               	movlw	high (_led3| (0+32768))
  3546  071D  00F1               	movwf	write_pin@pin+1
  3547  071E  087A               	movf	__switch_led@state,w
  3548  071F  00FB               	movwf	??__switch_led
  3549  0720  087B               	movf	??__switch_led,w
  3550  0721  00F2               	movwf	write_pin@state
  3551  0722  3002               	movlw	low ((_gpio+2)| (0+32768))
  3552  0723  0084               	movwf	4
  3553  0724  3088               	movlw	high ((_gpio+2)| (0+32768))
  3554  0725  0085               	movwf	5
  3555  0726  3F01               	moviw [1]fsr0
  3556  0727  008A               	movwf	10
  3557  0728  3F00               	moviw [0]fsr0
  3558  0729  000A               	callw
  3559  072A  3186               	pagesel	$
  3560                           
  3561                           ;display.c: 108:             gpio.write(&led1, state);
  3562  072B  30A5               	movlw	low (_led1| (0+32768))
  3563  072C  00F0               	movwf	write_pin@pin
  3564  072D  3088               	movlw	high (_led1| (0+32768))
  3565  072E  00F1               	movwf	write_pin@pin+1
  3566  072F  087A               	movf	__switch_led@state,w
  3567  0730  00FB               	movwf	??__switch_led
  3568  0731  087B               	movf	??__switch_led,w
  3569  0732  00F2               	movwf	write_pin@state
  3570  0733  3002               	movlw	low ((_gpio+2)| (0+32768))
  3571  0734  0084               	movwf	4
  3572  0735  3088               	movlw	high ((_gpio+2)| (0+32768))
  3573  0736  0085               	movwf	5
  3574  0737  3F01               	moviw [1]fsr0
  3575  0738  008A               	movwf	10
  3576  0739  3F00               	moviw [0]fsr0
  3577  073A  000A               	callw
  3578  073B  3186               	pagesel	$
  3579                           
  3580                           ;display.c: 109:             break;
  3581  073C  0008               	return
  3582  073D                     l1409:	
  3583                           ;display.c: 110:         case LED_ALL:
  3584                           
  3585                           
  3586                           ;display.c: 111:             gpio.write(&led1, state);
  3587  073D  30A5               	movlw	low (_led1| (0+32768))
  3588  073E  00F0               	movwf	write_pin@pin
  3589  073F  3088               	movlw	high (_led1| (0+32768))
  3590  0740  00F1               	movwf	write_pin@pin+1
  3591  0741  087A               	movf	__switch_led@state,w
  3592  0742  00FB               	movwf	??__switch_led
  3593  0743  087B               	movf	??__switch_led,w
  3594  0744  00F2               	movwf	write_pin@state
  3595  0745  3002               	movlw	low ((_gpio+2)| (0+32768))
  3596  0746  0084               	movwf	4
  3597  0747  3088               	movlw	high ((_gpio+2)| (0+32768))
  3598  0748  0085               	movwf	5
  3599  0749  3F01               	moviw [1]fsr0
  3600  074A  008A               	movwf	10
  3601  074B  3F00               	moviw [0]fsr0
  3602  074C  000A               	callw
  3603  074D  3186               	pagesel	$
  3604                           
  3605                           ;display.c: 112:             gpio.write(&led3, state);
  3606  074E  309E               	movlw	low (_led3| (0+32768))
  3607  074F  00F0               	movwf	write_pin@pin
  3608  0750  3088               	movlw	high (_led3| (0+32768))
  3609  0751  00F1               	movwf	write_pin@pin+1
  3610  0752  087A               	movf	__switch_led@state,w
  3611  0753  00FB               	movwf	??__switch_led
  3612  0754  087B               	movf	??__switch_led,w
  3613  0755  00F2               	movwf	write_pin@state
  3614  0756  3002               	movlw	low ((_gpio+2)| (0+32768))
  3615  0757  0084               	movwf	4
  3616  0758  3088               	movlw	high ((_gpio+2)| (0+32768))
  3617  0759  0085               	movwf	5
  3618  075A  3F01               	moviw [1]fsr0
  3619  075B  008A               	movwf	10
  3620  075C  3F00               	moviw [0]fsr0
  3621  075D  000A               	callw
  3622  075E  3186               	pagesel	$
  3623                           
  3624                           ;display.c: 113:             gpio.write(&led5, state);
  3625  075F  3097               	movlw	low (_led5| (0+32768))
  3626  0760  00F0               	movwf	write_pin@pin
  3627  0761  3088               	movlw	high (_led5| (0+32768))
  3628  0762  00F1               	movwf	write_pin@pin+1
  3629  0763  087A               	movf	__switch_led@state,w
  3630  0764  00FB               	movwf	??__switch_led
  3631  0765  087B               	movf	??__switch_led,w
  3632  0766  00F2               	movwf	write_pin@state
  3633  0767  3002               	movlw	low ((_gpio+2)| (0+32768))
  3634  0768  0084               	movwf	4
  3635  0769  3088               	movlw	high ((_gpio+2)| (0+32768))
  3636  076A  0085               	movwf	5
  3637  076B  3F01               	moviw [1]fsr0
  3638  076C  008A               	movwf	10
  3639  076D  3F00               	moviw [0]fsr0
  3640  076E  000A               	callw
  3641  076F  3186               	pagesel	$
  3642                           
  3643                           ;display.c: 114:             gpio.write(&led7, state);
  3644  0770  3090               	movlw	low (_led7| (0+32768))
  3645  0771  00F0               	movwf	write_pin@pin
  3646  0772  3088               	movlw	high (_led7| (0+32768))
  3647  0773  00F1               	movwf	write_pin@pin+1
  3648  0774  087A               	movf	__switch_led@state,w
  3649  0775  00FB               	movwf	??__switch_led
  3650  0776  087B               	movf	??__switch_led,w
  3651  0777  00F2               	movwf	write_pin@state
  3652  0778  3002               	movlw	low ((_gpio+2)| (0+32768))
  3653  0779  0084               	movwf	4
  3654  077A  3088               	movlw	high ((_gpio+2)| (0+32768))
  3655  077B  0085               	movwf	5
  3656  077C  3F01               	moviw [1]fsr0
  3657  077D  008A               	movwf	10
  3658  077E  3F00               	moviw [0]fsr0
  3659  077F  000A               	callw
  3660  0780  3186               	pagesel	$
  3661                           
  3662                           ;display.c: 115:             gpio.write(&led8, state);
  3663  0781  3089               	movlw	low (_led8| (0+32768))
  3664  0782  00F0               	movwf	write_pin@pin
  3665  0783  3088               	movlw	high (_led8| (0+32768))
  3666  0784  00F1               	movwf	write_pin@pin+1
  3667  0785  087A               	movf	__switch_led@state,w
  3668  0786  00FB               	movwf	??__switch_led
  3669  0787  087B               	movf	??__switch_led,w
  3670  0788  00F2               	movwf	write_pin@state
  3671  0789  3002               	movlw	low ((_gpio+2)| (0+32768))
  3672  078A  0084               	movwf	4
  3673  078B  3088               	movlw	high ((_gpio+2)| (0+32768))
  3674  078C  0085               	movwf	5
  3675  078D  3F01               	moviw [1]fsr0
  3676  078E  008A               	movwf	10
  3677  078F  3F00               	moviw [0]fsr0
  3678  0790  000A               	callw
  3679  0791  3186               	pagesel	$
  3680                           
  3681                           ;display.c: 116:             gpio.write(&led11, state);
  3682  0792  3082               	movlw	low (_led11| (0+32768))
  3683  0793  00F0               	movwf	write_pin@pin
  3684  0794  3088               	movlw	high (_led11| (0+32768))
  3685  0795  00F1               	movwf	write_pin@pin+1
  3686  0796  087A               	movf	__switch_led@state,w
  3687  0797  00FB               	movwf	??__switch_led
  3688  0798  087B               	movf	??__switch_led,w
  3689  0799  00F2               	movwf	write_pin@state
  3690  079A  3002               	movlw	low ((_gpio+2)| (0+32768))
  3691  079B  0084               	movwf	4
  3692  079C  3088               	movlw	high ((_gpio+2)| (0+32768))
  3693  079D  0085               	movwf	5
  3694  079E  3F01               	moviw [1]fsr0
  3695  079F  008A               	movwf	10
  3696  07A0  3F00               	moviw [0]fsr0
  3697  07A1  000A               	callw
  3698  07A2  3186               	pagesel	$
  3699                           
  3700                           ;display.c: 117:             gpio.write(&led13, state);
  3701  07A3  307B               	movlw	low (_led13| (0+32768))
  3702  07A4  00F0               	movwf	write_pin@pin
  3703  07A5  3088               	movlw	high (_led13| (0+32768))
  3704  07A6  00F1               	movwf	write_pin@pin+1
  3705  07A7  087A               	movf	__switch_led@state,w
  3706  07A8  00FB               	movwf	??__switch_led
  3707  07A9  087B               	movf	??__switch_led,w
  3708  07AA  00F2               	movwf	write_pin@state
  3709  07AB  3002               	movlw	low ((_gpio+2)| (0+32768))
  3710  07AC  0084               	movwf	4
  3711  07AD  3088               	movlw	high ((_gpio+2)| (0+32768))
  3712  07AE  0085               	movwf	5
  3713  07AF  3F01               	moviw [1]fsr0
  3714  07B0  008A               	movwf	10
  3715  07B1  3F00               	moviw [0]fsr0
  3716  07B2  000A               	callw
  3717  07B3  3186               	pagesel	$
  3718                           
  3719                           ;display.c: 118:             gpio.write(&led15, state);
  3720  07B4  3074               	movlw	low (_led15| (0+32768))
  3721  07B5  00F0               	movwf	write_pin@pin
  3722  07B6  3088               	movlw	high (_led15| (0+32768))
  3723  07B7  00F1               	movwf	write_pin@pin+1
  3724  07B8  087A               	movf	__switch_led@state,w
  3725  07B9  00FB               	movwf	??__switch_led
  3726  07BA  087B               	movf	??__switch_led,w
  3727  07BB  00F2               	movwf	write_pin@state
  3728  07BC  3002               	movlw	low ((_gpio+2)| (0+32768))
  3729  07BD  0084               	movwf	4
  3730  07BE  3088               	movlw	high ((_gpio+2)| (0+32768))
  3731  07BF  0085               	movwf	5
  3732  07C0  3F01               	moviw [1]fsr0
  3733  07C1  008A               	movwf	10
  3734  07C2  3F00               	moviw [0]fsr0
  3735  07C3  000A               	callw
  3736  07C4  3186               	pagesel	$
  3737                           
  3738                           ;display.c: 119:             gpio.write(&led18, state);
  3739  07C5  306D               	movlw	low (_led18| (0+32768))
  3740  07C6  00F0               	movwf	write_pin@pin
  3741  07C7  3088               	movlw	high (_led18| (0+32768))
  3742  07C8  00F1               	movwf	write_pin@pin+1
  3743  07C9  087A               	movf	__switch_led@state,w
  3744  07CA  00FB               	movwf	??__switch_led
  3745  07CB  087B               	movf	??__switch_led,w
  3746  07CC  00F2               	movwf	write_pin@state
  3747  07CD  3002               	movlw	low ((_gpio+2)| (0+32768))
  3748  07CE  0084               	movwf	4
  3749  07CF  3088               	movlw	high ((_gpio+2)| (0+32768))
  3750  07D0  0085               	movwf	5
  3751  07D1  3F01               	moviw [1]fsr0
  3752  07D2  008A               	movwf	10
  3753  07D3  3F00               	moviw [0]fsr0
  3754  07D4  000A               	callw
  3755  07D5  3186               	pagesel	$
  3756                           
  3757                           ;display.c: 123:     }
  3758                           
  3759                           ;display.c: 122:             break;
  3760                           
  3761                           ;display.c: 121:         default:
  3762                           
  3763                           ;display.c: 120:             break;
  3764  07D6  0008               	return
  3765  07D7                     l1413:	
  3766  07D7  087D               	movf	__switch_led@led,w
  3767  07D8  00FB               	movwf	??__switch_led
  3768  07D9  01FC               	clrf	??__switch_led+1
  3769                           
  3770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3771                           ; Switch size 1, requested type "space"
  3772                           ; Number of cases is 1, Range of values is 0 to 0
  3773                           ; switch strategies available:
  3774                           ; Name         Instructions Cycles
  3775                           ; simple_byte            4     3 (average)
  3776                           ; direct_byte            8     6 (fixed)
  3777                           ; jumptable            260     6 (fixed)
  3778                           ;	Chosen strategy is simple_byte
  3779  07DA  087C               	movf	??__switch_led+1,w
  3780  07DB  3A00               	xorlw	0	; case 0
  3781  07DC  1903               	skipnz
  3782  07DD  2FDF               	goto	l1611
  3783  07DE  2FF0               	goto	l412
  3784  07DF                     l1611:	
  3785                           
  3786                           ; Switch size 1, requested type "space"
  3787                           ; Number of cases is 5, Range of values is 1 to 5
  3788                           ; switch strategies available:
  3789                           ; Name         Instructions Cycles
  3790                           ; simple_byte           16     9 (average)
  3791                           ; direct_byte           19     9 (fixed)
  3792                           ; jumptable            263     9 (fixed)
  3793                           ;	Chosen strategy is simple_byte
  3794  07DF  087B               	movf	??__switch_led,w
  3795  07E0  3A01               	xorlw	1	; case 1
  3796  07E1  1903               	skipnz
  3797  07E2  2EF8               	goto	l1407
  3798  07E3  3A03               	xorlw	3	; case 2
  3799  07E4  1903               	skipnz
  3800  07E5  2ED5               	goto	l1405
  3801  07E6  3A01               	xorlw	1	; case 3
  3802  07E7  1903               	skipnz
  3803  07E8  2EB2               	goto	l1403
  3804  07E9  3A07               	xorlw	7	; case 4
  3805  07EA  1903               	skipnz
  3806  07EB  2EA0               	goto	l1401
  3807  07EC  3A01               	xorlw	1	; case 5
  3808  07ED  1903               	skipnz
  3809  07EE  2F3D               	goto	l1409
  3810  07EF  2FF0               	goto	l412
  3811  07F0                     l412:	
  3812  07F0  0008               	return
  3813  07F1                     __end_of__switch_led:	
  3814                           
  3815                           	psect	text10
  3816  03B9                     __ptext10:	
  3817 ;; *************** function _write_pin *****************
  3818 ;; Defined at:
  3819 ;;		line 176 in file "hardware.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  pin             2    0[COMMON] PTR const struct .
  3822 ;;		 -> led18(7), led15(7), led13(7), led11(7), 
  3823 ;;		 -> led8(7), led7(7), led5(7), led3(7), 
  3824 ;;		 -> led1(7), 
  3825 ;;  state           1    2[COMMON] enum E24
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  base_pointer    2    7[COMMON] PTR volatile unsigned ch
  3828 ;;		 -> RAM(4096), RAM(4096), 
  3829 ;;  pin_bit_posi    1    9[COMMON] unsigned char 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      void 
  3832 ;; Registers used:
  3833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3839 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3840 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3841 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3842 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3843 ;;Total ram usage:       10 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; This function calls:
  3846 ;;		Nothing
  3847 ;; This function is called by:
  3848 ;;		__switch_led
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           
  3853                           ;psect for function _write_pin
  3854  03B9                     _write_pin:	
  3855                           
  3856                           ;hardware.c: 176: void write_pin (pin_t *pin, boolean_state_t state);hardware.c: 177: {;
      +                          hardware.c: 178:     volatile uint8_t* base_pointer = pin->port;
  3857                           
  3858                           ;incstack = 0
  3859                           ; Regs used in _write_pin: [wreg-fsr1h+status,2+status,0+pclath]
  3860  03B9  0870               	movf	write_pin@pin,w
  3861  03BA  0084               	movwf	4
  3862  03BB  0871               	movf	write_pin@pin+1,w
  3863  03BC  0085               	movwf	5
  3864  03BD  3F00               	moviw [0]fsr0
  3865  03BE  00F7               	movwf	write_pin@base_pointer
  3866  03BF  3F01               	moviw [1]fsr0
  3867  03C0  00F8               	movwf	write_pin@base_pointer+1
  3868                           
  3869                           ;hardware.c: 179:     uint8_t pin_bit_position = HIGH << pin->pin_num;
  3870  03C1  3001               	movlw	1
  3871  03C2  00F3               	movwf	??_write_pin
  3872  03C3  0871               	movf	write_pin@pin+1,w
  3873  03C4  00F5               	movwf	??_write_pin+2
  3874  03C5  0870               	movf	write_pin@pin,w
  3875  03C6  00F4               	movwf	??_write_pin+1
  3876  03C7  3002               	movlw	2
  3877  03C8  0774               	addwf	??_write_pin+1,w
  3878  03C9  0084               	movwf	4
  3879  03CA  0875               	movf	??_write_pin+2,w
  3880  03CB  1803               	skipnc
  3881  03CC  0A75               	incf	??_write_pin+2,w
  3882  03CD  0085               	movwf	5
  3883  03CE  0800               	movf	0,w	;code access
  3884  03CF  0A89               	incf	9,f
  3885  03D0  2BD2               	goto	u404
  3886  03D1                     u405:	
  3887  03D1  35F3               	lslf	??_write_pin,f
  3888  03D2                     u404:	
  3889  03D2  0B89               	decfsz	9,f
  3890  03D3  2BD1               	goto	u405
  3891  03D4  0873               	movf	??_write_pin,w
  3892  03D5  00F6               	movwf	??_write_pin+3
  3893  03D6  0876               	movf	??_write_pin+3,w
  3894  03D7  00F9               	movwf	write_pin@pin_bit_position
  3895                           
  3896                           ;hardware.c: 181:     if (state == HIGH)
  3897  03D8  0372               	decf	write_pin@state,w
  3898  03D9  1D03               	btfss	3,2
  3899  03DA  2BE6               	goto	l1395
  3900                           
  3901                           ;hardware.c: 182:     {;hardware.c: 183:         base_pointer[0x100] |= (pin_bit_positio
      +                          n);
  3902  03DB  0879               	movf	write_pin@pin_bit_position,w
  3903  03DC  00F3               	movwf	??_write_pin
  3904  03DD  0877               	movf	write_pin@base_pointer,w
  3905  03DE  3E00               	addlw	0
  3906  03DF  0086               	movwf	6
  3907  03E0  3001               	movlw	1
  3908  03E1  3D78               	addwfc	write_pin@base_pointer+1,w
  3909  03E2  0087               	movwf	7
  3910  03E3  0873               	movf	??_write_pin,w
  3911  03E4  0481               	iorwf	1,f
  3912                           
  3913                           ;hardware.c: 184:     }
  3914  03E5  0008               	return
  3915  03E6                     l1395:	
  3916                           ;hardware.c: 185:     else if (state == LOW)
  3917                           
  3918  03E6  0872               	movf	write_pin@state,w
  3919  03E7  1D03               	btfss	3,2
  3920  03E8  0008               	return
  3921                           
  3922                           ;hardware.c: 186:     {;hardware.c: 187:         base_pointer[0x100] &= ~(pin_bit_positi
      +                          on);
  3923  03E9  0979               	comf	write_pin@pin_bit_position,w
  3924  03EA  00F3               	movwf	??_write_pin
  3925  03EB  0877               	movf	write_pin@base_pointer,w
  3926  03EC  3E00               	addlw	0
  3927  03ED  0086               	movwf	6
  3928  03EE  3001               	movlw	1
  3929  03EF  3D78               	addwfc	write_pin@base_pointer+1,w
  3930  03F0  0087               	movwf	7
  3931  03F1  0873               	movf	??_write_pin,w
  3932  03F2  0581               	andwf	1,f
  3933                           
  3934                           ;hardware.c: 188:     }
  3935  03F3  0008               	return
  3936  03F4                     __end_of_write_pin:	
  3937  007E                     btemp	set	126	;btemp
  3938  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    184
    Data        12
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6      19
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    S81$2$0	PTR struct . size(1) Largest target is 0

    S81$3$0	PTR const struct . size(1) Largest target is 0

    S530$2$0	PTR const struct . size(1) Largest target is 0

    S530$3$0	PTR const struct . size(1) Largest target is 0

    S530$4$0	PTR const struct . size(1) Largest target is 0

    Absolute function$0	PTR const struct . size(1) Largest target is 0

    S530$7$0	PTR const struct . size(1) Largest target is 0

    S695$3$0	PTR const struct . size(1) Largest target is 0

    S884$1$0	PTR volatile unsigned char  size(1) Largest target is 0

    S884$2$0	PTR volatile unsigned char  size(1) Largest target is 0

    S530$1$0	PTR const struct . size(2) Largest target is 7
		 -> led18(CODE[7]), led15(CODE[7]), led13(CODE[7]), led11(CODE[7]), 
		 -> led8(CODE[7]), led7(CODE[7]), led5(CODE[7]), led3(CODE[7]), 
		 -> led1(CODE[7]), 

    S530$0$0	PTR const struct . size(2) Largest target is 7
		 -> led18(CODE[7]), led15(CODE[7]), led13(CODE[7]), led11(CODE[7]), 
		 -> led8(CODE[7]), led7(CODE[7]), led5(CODE[7]), led3(CODE[7]), 
		 -> led1(CODE[7]), 

    S884$wait_for_register_flag_ms	PTR FTN(PTR volatile unsigned char ,const unsigned char ,const unsigned char ,const unsigned long ,)enum E24 size(2) Largest target is 1
		 -> wait_for_register_flag_ms(), 

    system_time.wait_for_register_flag_ms	PTR FTN(PTR volatile unsigned char ,const unsigned char ,const unsigned char ,const unsigned long ,)enum E24 size(2) Largest target is 1
		 -> wait_for_register_flag_ms(), 

    S884$wait_for_register_flag_us	PTR FTN(PTR volatile unsigned char ,const unsigned char ,const unsigned char ,const unsigned long ,)enum E24 size(2) Largest target is 1
		 -> wait_for_register_flag_us(), 

    system_time.wait_for_register_flag_us	PTR FTN(PTR volatile unsigned char ,const unsigned char ,const unsigned char ,const unsigned long ,)enum E24 size(2) Largest target is 1
		 -> wait_for_register_flag_us(), 

    S884$initialize_and_enable_interrupt_timer	PTR FTN()void  size(2) Largest target is 1
		 -> initialize_and_enable_interrupt_timer(), 

    system_time.initialize_and_enable_interrupt_timer	PTR FTN()void  size(2) Largest target is 1
		 -> initialize_and_enable_interrupt_timer(), 

    adc_measure_pin@pin.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    adc_measure_pin@pin.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    S695$measure_channel	PTR FTN(const enum E6330,)unsigned short  size(2) Largest target is 2
		 -> adc_measure_channel(), 

    adc.measure_channel	PTR FTN(const enum E6330,)unsigned short  size(2) Largest target is 2
		 -> adc_measure_channel(), 

    S695$measure_pin	PTR FTN(PTR const struct .,)unsigned short  size(2) Largest target is 2
		 -> adc_measure_pin(), 

    adc.measure_pin	PTR FTN(PTR const struct .,)unsigned short  size(2) Largest target is 2
		 -> adc_measure_pin(), 

    S695$disable	PTR FTN()void  size(2) Largest target is 1
		 -> adc_disable(), 

    adc.disable	PTR FTN()void  size(2) Largest target is 1
		 -> adc_disable(), 

    S695$enable	PTR FTN()void  size(2) Largest target is 1
		 -> adc_enable(), 

    adc.enable	PTR FTN()void  size(2) Largest target is 1
		 -> adc_enable(), 

    S695$initialize	PTR FTN()void  size(2) Largest target is 1
		 -> adc_initialize(), 

    adc.initialize	PTR FTN()void  size(2) Largest target is 1
		 -> adc_initialize(), 

    output_pps@pin.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    output_pps@pin.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    input_pps@pin.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    input_pps@pin.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    read_pin@pin.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    read_pin@pin.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    toggle_pin@pin.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    toggle_pin@pin.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    reset_pin@pin.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    reset_pin@pin.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    set_pin@pin.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    set_pin@pin.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    write_pin@pin.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    write_pin@pin.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    write_pin@pin	PTR const struct . size(2) Largest target is 7
		 -> led18(CODE[7]), led15(CODE[7]), led13(CODE[7]), led11(CODE[7]), 
		 -> led8(CODE[7]), led7(CODE[7]), led5(CODE[7]), led3(CODE[7]), 
		 -> led1(CODE[7]), 

    write_pin@base_pointer	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    pin_mode@pin.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    pin_mode@pin.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    pin_mode@pin	PTR const struct . size(2) Largest target is 7
		 -> led18(CODE[7]), led15(CODE[7]), led13(CODE[7]), led11(CODE[7]), 
		 -> led8(CODE[7]), led7(CODE[7]), led5(CODE[7]), led3(CODE[7]), 
		 -> led1(CODE[7]), 

    pin_mode@base_pointer	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    S530$output_pps	PTR FTN(PTR const struct .,unsigned char ,)void  size(2) Largest target is 1
		 -> output_pps(), 

    gpio.output_pps	PTR FTN(PTR const struct .,unsigned char ,)void  size(2) Largest target is 1
		 -> output_pps(), 

    S530$input_pps	PTR FTN(PTR const struct .,PTR volatile unsigned long ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gpio.input_pps	PTR FTN(PTR const struct .,PTR volatile unsigned long ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S530$read	PTR FTN(PTR const struct .,)unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    gpio.read	PTR FTN(PTR const struct .,)unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    S530$toggle	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> toggle_pin(), 

    gpio.toggle	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> toggle_pin(), 

    S530$reset	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> reset_pin(), 

    gpio.reset	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> reset_pin(), 

    S530$set	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> set_pin(), 

    gpio.set	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> set_pin(), 

    S530$write	PTR FTN(PTR const struct .,enum E24,)void  size(2) Largest target is 1
		 -> write_pin(), 

    gpio.write	PTR FTN(PTR const struct .,enum E24,)void  size(2) Largest target is 1
		 -> write_pin(), 

    S530$mode	PTR FTN(PTR const struct .,enum E6418,)void  size(2) Largest target is 1
		 -> pin_mode(), 

    gpio.mode	PTR FTN(PTR const struct .,enum E6418,)void  size(2) Largest target is 1
		 -> pin_mode(), 

    led18.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led18.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led17.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led17.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led16.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led16.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led15.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led15.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led14.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led14.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led13.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led13.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led12.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led12.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led11.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led11.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led10.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led10.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led9.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led9.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led8.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led8.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led7.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led7.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led6.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led6.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led5.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led5.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led4.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led4.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led3.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led3.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led2.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led2.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    S44$output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    led1.output_pps	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), RAM(DATA[4096]), 
		 -> RAM(DATA[4096]), 

    S44$port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    led1.port	PTR volatile unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), RAM(DATA[4096]), 

    S122$led_flash	PTR FTN(const enum E6835,unsigned short ,)void  size(2) Largest target is 1
		 -> led_flash(), 

    display.led_flash	PTR FTN(const enum E6835,unsigned short ,)void  size(2) Largest target is 1
		 -> led_flash(), 

    S122$led_off	PTR FTN(const enum E6835,)void  size(2) Largest target is 1
		 -> led_off(), 

    display.led_off	PTR FTN(const enum E6835,)void  size(2) Largest target is 1
		 -> led_off(), 

    S122$led_on	PTR FTN(const enum E6835,)void  size(2) Largest target is 1
		 -> led_on(), 

    display.led_on	PTR FTN(const enum E6835,)void  size(2) Largest target is 1
		 -> led_on(), 

    S122$pattern_scroll_in	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> pattern_scroll_in(), 

    display.pattern_scroll_in	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> pattern_scroll_in(), 

    S122$pattern_scroll_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> pattern_scroll_out(), 

    display.pattern_scroll_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> pattern_scroll_out(), 

    S122$initialize	PTR FTN()void  size(2) Largest target is 1
		 -> initialize(), 

    display.initialize	PTR FTN()void  size(2) Largest target is 1
		 -> initialize(), 

    S102$did_overflow	PTR FTN()enum E6667 size(2) Largest target is 1
		 -> watchdog_did_overflow(), 

    watchdog.did_overflow	PTR FTN()enum E6667 size(2) Largest target is 1
		 -> watchdog_did_overflow(), 

    S102$clear	PTR FTN()void  size(2) Largest target is 1
		 -> watchdog_clear(), 

    watchdog.clear	PTR FTN()void  size(2) Largest target is 1
		 -> watchdog_clear(), 

    S102$initialize	PTR FTN()void  size(2) Largest target is 1
		 -> watchdog_initialize(), 

    watchdog.initialize	PTR FTN()void  size(2) Largest target is 1
		 -> watchdog_initialize(), 

    S81$set_clock_to_pin	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> set_clock_to_pin(), 

    oscillator.set_clock_to_pin	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> set_clock_to_pin(), 

    S81$switch_clock	PTR FTN(PTR struct .,)enum E6667 size(2) Largest target is 1
		 -> switch_clock(), 

    oscillator.switch_clock	PTR FTN(PTR struct .,)enum E6667 size(2) Largest target is 1
		 -> switch_clock(), 

    S81$wait_for_startup_clock_ready	PTR FTN()void  size(2) Largest target is 1
		 -> wait_for_startup_clock_ready(), 

    oscillator.wait_for_startup_clock_ready	PTR FTN()void  size(2) Largest target is 1
		 -> wait_for_startup_clock_ready(), 

    S81$get_clock_source	PTR FTN()enum E6696 size(2) Largest target is 1
		 -> get_clock_source(), 

    oscillator.get_clock_source	PTR FTN()enum E6696 size(2) Largest target is 1
		 -> get_clock_source(), 


Critical Paths under _main in COMMON

    _pattern_scroll_out->__switch_led
    _pattern_scroll_in->__switch_led
    _led_off->__switch_led
    _initialize->__switch_led
    __switch_led->_write_pin

Critical Paths under _main in BANK0

    _main->_pattern_scroll_in
    _main->_pattern_scroll_out
    _pattern_scroll_out->_led_off
    _pattern_scroll_in->_led_off

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   24756
                         _initialize *
                  _pattern_scroll_in *
                 _pattern_scroll_out *
       _wait_for_startup_clock_ready *
                     _watchdog_clear *
                _watchdog_initialize *
 ---------------------------------------------------------------------------------
 (1) _watchdog_initialize                                  0     0      0       0
                     _watchdog_clear
 ---------------------------------------------------------------------------------
 (2) _watchdog_clear                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_for_startup_clock_ready                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pattern_scroll_out                                   3     2      1    9044
                                              3 BANK0      3     2      1
                        __switch_led
                            _led_off *
 ---------------------------------------------------------------------------------
 (1) _pattern_scroll_in                                    3     2      1    9044
                                              3 BANK0      3     2      1
                        __switch_led
                            _led_off *
 ---------------------------------------------------------------------------------
 (2) _led_off                                              3     2      1    4479
                                              0 BANK0      3     2      1
                        __switch_led
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0    6668
                        __switch_led
                           _pin_mode *
 ---------------------------------------------------------------------------------
 (2) _pin_mode                                            10     7      3    2340
                                              0 COMMON    10     7      3
 ---------------------------------------------------------------------------------
 (3) __switch_led                                          4     3      1    4328
                                             10 COMMON     4     3      1
                          _write_pin *
 ---------------------------------------------------------------------------------
 (4) _write_pin                                           10     7      3    2086
                                              0 COMMON    10     7      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize *
     __switch_led
       _write_pin *
     _pin_mode *
   _pattern_scroll_in *
     __switch_led
       _write_pin *
     _led_off *
       __switch_led
         _write_pin *
   _pattern_scroll_out *
     __switch_led
       _write_pin *
     _led_off *
       __switch_led
         _write_pin *
   _wait_for_startup_clock_ready *
   _watchdog_clear *
   _watchdog_initialize *
     _watchdog_clear

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6      13       5       23.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      21      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      21      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Sep 27 10:22:08 2019

                           __CFG_CP$ON 0000                            __CFG_CPD$ON 0000  
                         ?__switch_led 007A                    __end_of_system_time 08B2  
                                  l412 07F0                                    l198 0357  
                                  u404 03D2                                    u405 03D1  
                                  _PR2 001E                                    u434 058C  
                                  u435 058B                                    u607 0481  
                                  u617 049A                                    u627 04B3  
                                  u637 04CC                                    u647 040E  
                                  u657 0427                                    u667 0440  
                                  u677 0459                                    u597 03A9  
                                  _adc 081C              write_pin@pin_bit_position 0079  
                                  wreg 0009                        __switch_led@led 007D  
                         __CFG_LVP$OFF 0000                   pin_mode@base_pointer 0077  
                                 l1401 06A0                                   l1403 06B2  
                                 l1405 06D5                                   l1413 07D7  
                                 l1407 06F8                                   l1431 05EC  
                                 l1409 073D                                   l1611 07DF  
                                 l1443 0672                                   l1435 0619  
                                 l1427 05BF                                   l1523 0404  
                                 l1525 041C                                   l1509 04C2  
                                 l1439 0646                                   l1535 041D  
                                 l1537 0435                                   l1473 0477  
                                 l1395 03E6                                   l1547 0436  
                                 l1475 048F                                   l1549 044E  
                                 l1485 0490                                   l1565 039C  
                                 l1559 044F                                   l1487 04A8  
                                 l1497 04A9                                   l1499 04C1  
                         __CFG_WDTE$ON 0000                                   _TMR2 001D  
                                 _led1 08A5                                   _led2 0866  
                                 _led3 089E                                   _led4 085F  
                                 _led5 0897                                   _led6 0858  
                                 _led7 0890                                   _led8 0889  
                                 _led9 0851            __end_of_watchdog_initialize 036A  
                                 _main 0381                                   _gpio 0800  
                                 fsr0h 0005                                   fsr1h 0007  
                                 indf0 0000                                   fsr0l 0004  
                                 indf1 0001                                   fsr1l 0006  
                                 btemp 007E                                   start 0002  
                        __CFG_CSWEN$ON 0000                          __CFG_MCLRE$ON 0000  
                                WDTCLR 0356                                  _ADACT 009F  
                                ?_main 0070                                  _ADRES 009B  
                                _TMR0H 0016                        __end_of_display 081C  
                      __end_of_led_off 0375                                  _led10 084A  
                                _led11 0882                                  _led12 0843  
                                _led13 087B                                  _led14 083C  
                                _led15 0874                                  _led16 0835  
                                _led17 082E                                  _led18 086D  
                write_pin@base_pointer 0077                         __CFG_BOREN$OFF 0000  
                                pclath 000A                           led_off@state 002E  
                                status 0003                                  wtemp0 007E  
                       write_pin@state 0072                        __initialization 07F1  
                         __end_of_led1 08AC                           __end_of_led2 086D  
                         __end_of_led3 08A5                           __end_of_led4 0866  
                         __end_of_led5 089E                           __end_of_led6 085F  
                         __end_of_led7 0897                           __end_of_led8 0890  
                         __end_of_led9 0858                           __end_of_main 03B9  
                          _system_time 08AC                           __end_of_gpio 0810  
                    _pattern_scroll_in 03F4                      __switch_led@state 007A  
                         _switch_clock 0000                       ??_watchdog_clear 0070  
                   ?_pattern_scroll_in 002F                                 ??_main 007E  
                  ??_pattern_scroll_in 0030                       _get_clock_source 0000  
                       __CFG_PWRTE$OFF 0000              __end_of_pattern_scroll_in 0467  
                _watchdog_did_overflow 0000                     pattern_scroll_in@i 0031  
                               _led_on 0000                              ??_led_off 002D  
                     __end_of_pin_mode 069E                   __size_of__switch_led 0153  
                     __end_of_watchdog 08B8                __end_of__initialization 07FD  
                       __pcstackCOMMON 0070                             _adc_enable 0000  
                         __pidataBANK0 0375                          __end_of_led10 0851  
                        __end_of_led11 0889                          __end_of_led12 084A  
                        __end_of_led13 0882                          __end_of_led14 0843  
                        __end_of_led15 087B                          __end_of_led16 083C  
                        __end_of_led17 0835                          __end_of_led18 0874  
            _wait_for_register_flag_ms 0000              _wait_for_register_flag_us 0000  
                   _pattern_scroll_out 0467                    ?_pattern_scroll_out 002F  
             pin_mode@pin_bit_position 0079                             __pbssBANK0 0032  
                 ??_pattern_scroll_out 0030                 pattern_scroll_in@count 002F  
           __size_of_pattern_scroll_in 0073                             __pmaintext 0381  
                          pin_mode@pin 0070                     __size_of_write_pin 003B  
                            ?_pin_mode 0070           __size_of_watchdog_initialize 0008  
                       _adc_initialize 0000                             _initialize 04DA  
                              __ptext1 0362                                __ptext2 0356  
                              __ptext3 0357                                __ptext4 0467  
                              __ptext5 03F4                                __ptext6 036A  
                              __ptext7 04DA                                __ptext8 0573  
                              __ptext9 069E                    pattern_scroll_out@i 0031  
                              _display 0810                                _led_off 036A  
                            _T2CONbits 001F                                _set_pin 0000  
                 end_of_initialization 07FD                                init_ram 035C  
                              initloop 035D   __end_of_wait_for_startup_clock_ready 035C  
__size_of_wait_for_startup_clock_ready 0005           _wait_for_startup_clock_ready 0357  
                           ??_pin_mode 0073                             _oscillator 0826  
                    __end_of_write_pin 03F4                             _toggle_pin 0000  
                     __CFG_FEXTOSC$OFF 0000                             _output_pps 0000  
                           led_off@led 002C          ?_wait_for_startup_clock_ready 0070  
                         write_pin@pin 0070                    _adc_measure_channel 0000  
                          _adc_disable 0000                          ??__switch_led 007B  
                          ?_initialize 0070                    start_initialization 07F1  
                          __end_of_adc 0826                __size_of_watchdog_clear 0001  
                    __CFG_RSTOSC$LFINT 0000                            __pdataBANK0 0020  
                            ___latbits 0003                          __pcstackBANK0 002C  
                  __end_of__switch_led 07F1                    _watchdog_initialize 0362  
_initialize_and_enable_interrupt_timer 0000                            _CLKRCONbits 039A  
                  __size_of_initialize 0099            __size_of_pattern_scroll_out 0073  
                 ?_watchdog_initialize 0070                      __size_of_pin_mode 012B  
       ??_wait_for_startup_clock_ready 0070                              _led_flash 0000  
                             ?_led_off 002C                       _set_clock_to_pin 0000  
                         pin_mode@mode 0072                               _PMD0bits 0911  
                            _reset_pin 0000                  ??_watchdog_initialize 0070  
              pattern_scroll_out@count 002F                            __switch_led 069E  
                           _ADCON0bits 009D                             _ADCON1bits 009E  
                      _low_speed_clock 0020                         _watchdog_clear 0356  
                            _write_pin 03B9                        _adc_measure_pin 0000  
                _high_speed_uart_clock 0026                           ??_initialize 007E  
               __end_of_watchdog_clear 0357                       __size_of_led_off 000B  
                           _T0CON0bits 0017                             _T0CON1bits 0018  
                             __ptext10 03B9                             ?_write_pin 0070  
                          _OSCCON1bits 0919                            _OSCCON2bits 091A  
                          _OSCCON3bits 091B                          __size_of_main 0038  
                   __end_of_initialize 0573                               _pin_mode 0573  
                             _watchdog 08B2                        ?_watchdog_clear 0070  
                           _FVRCONbits 0117                         __pstringtext10 0851  
                       __pstringtext11 0858                         __pstringtext20 0889  
                       __pstringtext12 085F                         __pstringtext21 0890  
                       __pstringtext13 0866                         __pstringtext22 0897  
                       __pstringtext14 08AC                         __pstringtext23 089E  
                       __pstringtext15 08B2                         __pstringtext24 08A5  
                       __pstringtext16 086D                         __pstringtext17 0874  
                       __pstringtext18 087B                         __pstringtext19 0882  
                   __end_of_oscillator 082E                      __CFG_CLKOUTEN$OFF 0000  
              __gb_display_initialized 0032                          __pstringtext1 0800  
                        __pstringtext2 0810                          __pstringtext3 081C  
                        __pstringtext4 0826                          __pstringtext5 082E  
                        __pstringtext6 0835                          __pstringtext7 083C  
                        __pstringtext8 0843                          __pstringtext9 084A  
                           _WDTCONbits 0097                            ??_write_pin 0073  
                           _STATUSbits 0003             __end_of_pattern_scroll_out 04DA  
